<style>
  .demographics {
    border-style: solid;
    border-width: 1px;
    margin: 0 10px;
    padding: 80px 10px 5px;
    position: absolute;
    top: 30px;
    width: 96%;
    height: 16%;

    border: 2px solid;
    border-radius: 25px;
  }

  #patient_name {
    font-weight: bold;
    font-size: 20px;
    top: 4px;
    margin-left: 35px;
    position: absolute;
  }

  .gender {
    border-radius: 50%;
    border: 2px solid;
    width: 24px;
  }

  /* ............. div tabble ............. */

  .dtable {
    top: 20px;
    position: absolute;
    width: 98%;
    display: table;
  }

  .drow {
    display: table-row;
  }

  .dcell {
    width: 100%;
    display: table-cell;
  }

  .name {
    border-style: solid;
    border-width: 0px 0px 1px 0px;
  }

  /* ........................... div table end ..... */

  .table-head {
    font-weight: bold;
    width: 15%;
  }

  .data {
    position: absolute;
    top: 35%;
    width: 99%;
  }

  .table-data {
    width: 20%;
  }

  .chart {
    position: absolute;
    top: 106%;
  }

  .next_task {
    position: absolute;
    top: 103%;
    z-index: 1;
    font-weight: bold;
  }

  #update_span {
    background-color: #5f9ea0;
    border-radius: 10px;
    bottom: -1.5px;
    color: white !important;
    cursor: pointer;
    font-size: 14pt;
    padding: 7px 37px 7px;
    position: absolute;
    font-weight: bolder;
  }

  #lab_trail_span {
    background-color: #5f9ea0;
    border-radius: 10px;
    bottom: -1.5px;
    color: white !important;
    cursor: pointer;
    font-size: 14pt;
    padding: 7px 70px;
    font-weight: bolder;
    position: absolute;
  }
</style>

<%
#raise @patient_obj.inspect
%>


<div class="demographics">

  <div class="dtable">
    <div class="drow">
      <div class="dcell name">
        <div class="gender"><%= image_tag "male.gif", :id => 'fetched_sex' %>
        </div>&nbsp;<span id='patient_name'></span>
      </div>
    </div>
  </div>

  <div class="dtable data">
    <div class="drow">
      <div class="dcell table-head">Patient ID:</div>
      <div class="dcell table-data" id="nid"></div>
      <div class="dcell table-head">Duration on ART:</div>
      <div class="dcell table-data" id="duration_on_art">&nbsp;</div>
      <div class="dcell table-head">Latest VL:</div>
      <div class="dcell table-data" style="width: 2000px !important;" >&nbsp; <span id="vl_result"></span></div>
    </div>

    <div class="drow">
      <div class="dcell table-head">Filing number:</div>
      <div class="dcell table-data" id="filing_number">&nbsp;</div>
      <div class="dcell table-head">Current regimen:</div>
      <div class="dcell table-data" id="current_regimen">&nbsp;</div>
      <div class="dcell table-head">Date of Sample:</div>
      <div class="dcell table-data">&nbsp; <span id="vl_date_of_sample"></span></div>
    </div>


    <div class="drow">
      <div class="dcell table-head">ARV number:</div>
      <div class="dcell table-data" id="arv_number">&nbsp;</div>
      <div class="dcell table-head">ART start date:</div>
      <div class="dcell table-data" id="art_start_date">&nbsp;</div>
      <div class="dcell table-head">Date given to patient:</div>
      <div class="dcell table-data">&nbsp; <span id="vl_date_given"></span></div>
    </div>

    <div class="drow">
      <div class="dcell table-head">Current outcome:</div>
      <div class="dcell table-data" id="outcome">&nbsp;</div>
      <div class="dcell table-head">Residence:</div>
      <div class="dcell table-data" id="residence">&nbsp;</div>
      
    </div>

    <div class="drow">
      <div class="dcell table-head">&nbsp;</div>
      <div class="dcell table-data">&nbsp;</div>
      <!--<div class="dcell table-head"><span id="update_span">Update VL</span></div>
      <div class="dcell table-data"><span id="lab_trail_span"><span>VL Trail</span></span></div>-->
    </div>


  </div>

  <div class="dtable next_task">
    <div class="drow">
      <div class="dcell">Next task:&nbsp;<span id="next_task"></span></div>
    </div>
  </div>

  <div class="dtable chart">
    <div class="drow">
      <div class="dcell" id="summary"></div>
    </div>
  </div>


</div>


<%= javascript_include_tag "Highcharts/js/jquery.min.js" %>

<%= javascript_include_tag "Highcharts/js/highcharts" %>
<%= javascript_include_tag "Highcharts/js/modules/exporting" %>
<script type="text/javascript">

  var patientID = "<%=params[:found_person_id]%>";

  function initData() {

    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_name",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        printName(result);
      }
        
    });

  }

  function printName(result) {
    var data = JSON.parse(result);

    if(data['gender'] == 'M' || data['gender'] == 'Male') {
      var sex = 'male';
    }else{
      var sex = 'female';
    }

    document.getElementById('patient_name').innerHTML = data['name'];
    var src_path = document.getElementById('fetched_sex');
    var current_path = src_path.src;
    src_path.src = src_path.src.replace('male', sex);

    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_identifiers",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        printIdentifiers(result);
      }
        
    });
  
  }

  function printIdentifiers(result) {
    var data = JSON.parse(result);
    document.getElementById('nid').innerHTML = data['national_id'];
    document.getElementById('filing_number').innerHTML = data['filing_number'];
    document.getElementById('arv_number').innerHTML = data['arv_number'];

    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_art_start_date",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        document.getElementById('art_start_date').innerHTML = JSON.parse(result)['start_date']
        printDurationOnART(JSON.parse(result)['start_date']);
      }
        
    });
  }

  function printDurationOnART(start_date) {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_duration_on_art",
      data: "start_date=" + start_date,
      success: function(result){
        document.getElementById('duration_on_art').innerHTML = JSON.parse(result)['duration']
        printCurentRegimen();
      }
        
    });
  }

  function printCurentRegimen() {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_current_regimen",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        document.getElementById('current_regimen').innerHTML = JSON.parse(result)['regimen']
        printCurentResidence();
      }
    });
  }

  function printCurentResidence() {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_current_address",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        document.getElementById('residence').innerHTML = JSON.parse(result)['current_residence']
      }
    });
  }

  function printCurentOutcome() {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_current_outcome",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        document.getElementById('outcome').innerHTML = JSON.parse(result)['outcome']
      }
    });
  }

  function printNextTask() {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_next_task",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        document.getElementById('next_task').innerHTML = JSON.parse(result)['task']
      }
    });
  }

  function printLatestVLResult(){
    jQuery.ajax({
      type: "POST",
      url: "/people/get_latest_vl_result",
      data: "patient_id=" + patientID,
      success: function(result){
        vl_data = JSON.parse(result)
        vl_result = vl_data["vl_result"];
        vl_date = vl_data["vl_date"];
        vl_date_given = vl_data["vl_date_given"];
        document.getElementById('vl_result').innerHTML = vl_result;
        document.getElementById('vl_date_of_sample').innerHTML = vl_date;
        document.getElementById('vl_date_given').innerHTML = vl_date_given;
      }
    });
  }







  /* ..................... chart ......................... */

  function getWeight() {
    jQuery.ajax({
      type: "POST",
      url: "/people/get_patient_weight_trail",
      data: "patient_id=" + "<%=params[:found_person_id]%>",
      success: function(result){
        formatData(JSON.parse(result));
      }
    });
  }

  function plotChart(weights) {
    jQuery('#summary').highcharts({
      chart: {
        zoomType: 'x'
      },
      title: {
        text: 'Weight history'
      },
      subtitle: {
        text: document.ontouchstart === undefined ?
          'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'
      },
      xAxis: {
        type: 'datetime'
      },
      yAxis: {
        min: 0,
        title: {
          text: 'Weight (kg)'
        }
      },
      legend: {
        enabled: false
      },
      credits: {
        enabled: false
      },
      exporting: {
        enabled: false
      },
      plotOptions: {
        area: {
          fillColor: {
            linearGradient: {
              x1: 0,
              y1: 0,
              x2: 0,
              y2: 1
            },
            stops: [
              [0, Highcharts.getOptions().colors[0]],
              [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
            ]
          },
          marker: {
            enabled: true,
            symbol: 'circle',
            radius: 10
          },
          lineWidth: 1,
          states: {
            hover: {
              lineWidth: 1
            }
          },
          threshold: null
        }
      },
      series: [{
          type: 'area',
          name: 'Weight',
          data: weights
        }]
    });
    //});
  }

  function formatData(obs) {
    data = [];
    for(var i = 0; i < obs.length; i++) {
      data.push([ getDateWithFormat(obs[i][0]), obs[i][1] ]);
    }
    plotChart(data);
  }
 
  function getDateWithFormat(d) {
    newDate = new Date(d);
    var day = newDate.getDate();
    var monthIndex = newDate.getMonth();
    var year = newDate.getFullYear();

    return Date.UTC(year,monthIndex,day);
 
    months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
    return day + "/" + months[monthIndex] + '/' + year;
    return day + "/" + months[monthIndex] + '/' + year;
  }
 
  function dataG() {
    var correctedWeights = [];
      
    for(var i = 0; i < weights.length; i++) {
      correctedWeights.push(weights[i][1]);
    }
    return [{name: 'Weight', data: correctedWeights}];
  }

  function getDates() {
    dates = [];
    for(var i = 0; i < weights.length; i++) {
      dates.push(weights[i][0]);
    }
    return dates;
  }





  printNextTask();
  initData();
  printCurentOutcome();
  getWeight();
  printLatestVLResult();
</script>
