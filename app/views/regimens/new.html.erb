
<%= javascript_include_tag 'notification_tracker'%>
<%= javascript_include_tag 'miscellaneous.js'%>
<%=  stylesheet_link_tag  'miscellaneous.css'%>

<%= stylesheet_link_tag 'yes_no_btn'%>

<div id="confirmatory-test-popup-div">
  <div id="confirmatory-test-popup-header">
    <center style='color: orange;' id="main-pop-header">Starter pack needed for 14 days</center>
  </div><br />
  <div>

    <span style="font-size: 16pt;">
      <span id='initiation_type' style="color: green; padding-left: 20px;"></span>&nbsp;<span id='selected_starter_pack'></span>
    </span>
    <div style="padding-top: 65px;">
      <span id="confirmatory-test-yes" 
        onclick="recordNotification('Starter pack needed for 14 days','Yes');hideConfirmatoryTestPopup();resetRegimen();gotoNextPage();" 
            class="confirmatory-test-my_button"
            style="position: relative;">Prescribe starter pack</span>

      <span id="confirmatory-test-no" onclick="recordNotification('Starter pack needed for 14 days','Cancel');hideConfirmatoryTestPopup();"
            class="confirmatory-test-my_button"
            style="position: relative;">Cancel</span>
    </div>
  </div>
</div>


<div id="confirmatory-test-cover"></div>



<style type="text/css">

  .Bclear {
    background-color: clear !important;
    text-decoration: line-through;
    color: gray !important;
  }

  .Bcolor {
    background-color: rgba(240, 240, 240, 0.2) !important;
    text-decoration: line-through;
    color: gray !important;
  }

  .confirmatory-test-my_button {
    -moz-user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    display: inline-block;
    font-size: 16px;
    font-weight: bolder;
    line-height: 2.29;
    margin-bottom: 0;
    padding: 6px 56px;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;
    background-color: #337ab7;
    border-color: #2e6da4;
    color: #fff;
    float: right;
    margin-top: -5px;
  }


  #confirmatory-test-popup-div {
    display: none;
    background-color: #F4F4F4;
    border: 2px solid #E0E0E0;
    border-radius: 15px;
    height: 200px;
    padding: 5px;
    position: absolute;
    margin-top: 100px;
    width: 530px;
    /*margin-left: 430px;*/
    left: 20%;
    z-index: 991;
  }

  #confirmatory-test-popup-header{
    border-bottom: 2px solid #7D9EC0;
    margin-left: -5px;
    width: 101.5%;
    background-color: #FFFFFF;
    margin-top: -5px;
    padding-top: 5px;
    border-radius: 15px 15px 0 0;
    font-size: 14pt;
    font-weight: bolder;
  }

  #confirmatory-test-cover{
    display: none;
    position: absolute;
    background-color: black;
    width: 100%;
    height: 102%;
    left: 0%;
    top: 0%;
    z-index: 990;
    opacity: 0.65;
  }

  #confirmatory-test-yes {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    bottom: 0px;
  }

  #confirmatory-test-no {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    bottom: 0px;
    margin-right: 40px;
  }
</style>


<script>
  function hideConfirmatoryTestPopup(){
    document.getElementById("confirmatory-test-popup-div").style.display = 'none';
    document.getElementById("confirmatory-test-cover").style.display = 'none';
  }

  function showConfirmatoryTestPopup(){
    document.getElementById("main-pop-header").innerHTML = "Starter pack needed for 14 days";
    document.getElementById("confirmatory-test-yes").innerHTML = "Prescribe starter pack";

    document.getElementById("confirmatory-test-popup-div").style.display = 'inline';
    document.getElementById("confirmatory-test-cover").style.display = 'inline';
    selected_starter_pack = document.getElementById("regimen_concept_id").value;
    document.getElementById("selected_starter_pack").innerHTML = selected_starter_pack;
<%if @patient_initiated.match(/Re-initiated/i) %> 
      initiation_type = 'Re-initiation / Re-start'
<%elsif @patient_initiated.match(/Initiation/i) %> 
      initiation_type = 'First time initiation'
<%end%>
    document.getElementById("initiation_type").innerHTML = initiation_type;

  }

  function showTBtreatmentPopup(){
    document.getElementById("main-pop-header").innerHTML = "On TB treatment";
    document.getElementById("confirmatory-test-yes").innerHTML = "Prescribe regimen";

    document.getElementById("selected_starter_pack").innerHTML = "";

    document.getElementById("confirmatory-test-popup-div").style.display = 'inline';
    document.getElementById("confirmatory-test-cover").style.display = 'inline';
    initiation_type = 'ATV/r is going to be replaced by LPV/r'
    document.getElementById("initiation_type").innerHTML = initiation_type;
  }

  function checkIfStarterPack() {
<%if @patient_initiated.match(/Re-initiated|Initiation/i) %> 
      concept = document.getElementById("regimen_concept_id");
      if(concept.value.match(/NVP|Nevirapine/i)) {
        sel = document.getElementById('tt_currentUnorderedListOptions');
        lis = document.getElementsByTagName('li');
        options = [];
        for(var i = 0; i < lis.length; i++){
          if(lis[i].innerHTML.match(/week/i)){
            options.push(lis[i])
          }
        }

        sel.innerHTML = null;
        for(var i = 0; i < options.length; i++){
          sel.appendChild(options[i])
        }
        
        months = ['1 month', '2 months', '3 months', '4 months',
          '5 months', '6 months', '7 months', '8 months',
          '9 months', '10 months', '11 months', '12 months'
        ]

        //colors = [' #CDBA96;', '']
        colors = 'Bclear';//['Bclear', 'Bcolor'];

        for(var i = 0; i < months.length; i++){
          option = document.createElement('option');
          option.innerHTML = months[i];
          option.setAttribute('class',colors);
          if(colors == 'Bclear') {
            colors = 'Bcolor';
          }else{
            colors = 'Bclear';
          }

          sel.appendChild(option);
        }
      }
<%end%>
  }

  function disableOptimiseButtonForStarterPacks(){
<%if @patient_initiated.match(/Re-initiated|Initiation/i) %>
      concept = document.getElementById("regimen_concept_id");
      jQuery('#optimize_interval').removeClass('gray').addClass('green');
      jQuery('#optimize_interval').attr("onmousedown", 'onSetAppointmentIntervalType("Optimize - including hanging pills")');

      if(concept.value.match(/NVP|Nevirapine/i)) {
        jQuery('#optimize_interval').removeClass('green').addClass('gray');
        jQuery('#optimize_interval').removeAttr("onmousedown");
      }

<%end%>
  }

</script>



<%= javascript_include_tag("miscellaneous")%>
<%= stylesheet_link_tag("miscellaneous")%>
<%= javascript_include_tag "Highcharts/js/jquery.min.js" %>
<%= javascript_include_tag("numericKeypad")%>
<%= stylesheet_link_tag("fast_track_table")%>
<style type="text/css">
  .FastTrackBtn {
    width: 175px !important;
  }

  .contraindications_row th {
    background-color: lightgray;
  }

  .regimen_side_effect_popup {
    padding-right: 15px;
  }

  .regimen_side_effect_popup td {
    padding-left: 5px;
    vertical-align: top !important;
  }

  #pills_remaining {
    padding-left: 25px;
  }

  .pills_remaining_tr td {
    font-size: 14px;
    border-collapse: collapse;
  }

  .contraindications_row th {
    font-size: 18px;
    text-align: left;
    padding-left: 5px;
  }

  #popup {
    top: 50px;
    height:80% ! important;
  }

  #reason_for_tb_treatment_change {
    height:80%;
    width:100%;
    background:none repeat scroll 0 0 light-grey;
    border-color: -moz-use-text-color -moz-use-text-color silver;
    border-style: none none solid;
    border-width: medium medium 1px;
    font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
    font-size: 2.2em;
    padding-left: 5px;

  }

  #main_head{
    float: left;
    width: 100%;
    font-size: 23px;
    font-weight:bold;
  }

  #reason_for_change{
    height:379px;
    width:100%;
    background:none repeat scroll 0 0 light-grey;
    border-color: -moz-use-text-color -moz-use-text-color silver;
    border-style: none none solid;
    border-width: medium medium 1px;
    font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
    font-size: 2.2em;
    padding-left: 5px;

  }

  #ok {
    float:right ! important;
    width: 150px;
  }

  #cancel {
    float:left ! important;
    width: 150px;
  }

  #cover {
    position: absolute;
    background-color: black;
    width: 100%;
    height: 100%;
    left: 0%;
    top: 0%;
    z-index: 500;
    opacity: 0.5;
    align: center;
    display:none;
  }

  #newText{
    top: 40%;
    left: 40%;
    margin-top: -200px;
    margin-left: -250px;
    position: absolute;
    margin-right:auto;
    width: 800px;
    height: 38px;
    padding-bottom: 10px;
    font-size: 2em;
    text-align: left;
    background-color: white;
    padding: 10px;
    z-index: 999;
    border: 5px outset tomato;
    border-radius: 15px;
    z-index: 900;
    display:none;
  }

  #alertPage{
    top: 50%;
    left: 40%;
    margin-top: -200px;
    margin-left: -250px;
    position: absolute;
    margin-right:auto;
    width: 800px;
    height: 400px;
    padding-bottom: 10px;
    font-size: 1em;
    text-align: center;
    background-color: white;
    padding: 10px;
    z-index: 999;
    border: 5px outset tomato;
    border-radius: 15px;
    z-index: 900;
  }

  #summary {
    top: 60px;
    overflow:auto;
    height:450px ! important;
  }

  #contraindicators {
    top: 50px;
    overflow:auto;
    height:80% ! important;
  }

  #tt_page_build_regimen #viewport {
    height: 18em;
  }

  #tt_page_build_art_regimen .inputFrameClass {
    height: 85%;
  }

  #tt_page_build_art_regimen #viewport {
    height: 90%;
  }

  #tt_page_duration_of_art_drugs .options {  height: 90%; }

  #tt_page_duration_of_art_drugs .inputFrameClass {  height: 86%; }

  #tt_page_interval_to_next_visit .options {  height: 90%; }

  #tt_page_interval_to_next_visit .inputFrameClass {
    height: 86%;
    <% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      width: 35%;
    <%end%>
  }


  #tt_page_duration .options {  height: 90%; }

  #tt_page_duration .inputFrameClass {  height: 86%; }

  #previous_drugs_dispensed {
    bottom: 380px;
    font-size: 20px;
    left: 25px;
    position: absolute;
    z-index: 600;
    border-radius: 10px 10px 10px 10px;
    width: 95%;
    display: none;
  }

  #previous_drugs_dispensed table th{
    border-style: solid;
    border-width: 1px;
    background-color: lightgrey;
  }

  #previous_drugs_dispensed table {
    width: 100%;
  }

  .tt_controls_duration_of_art_drugs .keyboard { display:none !important; }

  .unknownButton .numericKeyboard #char, #decimal, #slash, #star, #plus, #date, #minus, #comma, #percent {
    display: none;
  }

  .tt_controls_number_of_condoms_given #qwerty {
    display: none;
  }

  .NoKeyboard .inputFrameClass {
    height:600;
  }

  .tt_controls_duration .abcKeyboard {
    display: none;
  }

  .tt_controls_build_art_regimen .abcKeyboard {
    display: none;
  }

  .tt_controls_build_art_regimen .qwertyKeyboard {
    display: none;
  }

  .tt_controls_select_tb_regimen .qwertyKeyboard {
    display: none;
  }

  .tt_controls_select_tb_regimen .abcKeyboard {
    display: none;
  }

  .message{
    top: 1%;
    left: 1%;
  }

  .adults{
    background:none repeat scroll 0 0 #87cefa;
    color:black;
    font-size: 12px;
  }

  .paeds{
    background:none repeat scroll 0 0 yellow;
    color:black;
    font-size: 12px;
  }
  .title{
    font-weight:bold;
    font-size:12px;
    padding: 5px;
  }
  .footer{
    font-weight:bold;
    font-size:12px;
    padding: 5px;
  }

  table {
    width:100%;
  }

  .tt_controls_duration_of_art_drugs .keyboard { display:none !important; }

  #tt_page_duration_of_art_drugs .options {  height: 90%; }

  #tt_page_duration_of_art_drugs .inputFrameClass {  height: 86%; }

  #tt_page_select_tb_regimen .inputFrameClass {  height: 80%; }
  #tt_page_select_tb_regimen .options {  height: 76%; }

  tr th {
    background-color:gray;
    padding:10px;
    font-size:12px;
  }

  td {
    text-align:left;
    text-transform: capitalize;
  }

  select {
    border-bottom: 1px solid silver ! important;
    background-color: grey ! important;

  }

  option {
    background-color: white ! important;
    display:block;
    font-family: "Nimbus Sans L","Arial Narrow",sans-serif;
    font-size: 1.2em;
    list-style: none outside none;
    margin-bottom: 5px;
    margin-top: 5px;
    padding-left: 5px;
    padding-right: 5px;
  }

  .NoKeyboard .inputFrameClass {
    height:600;
  }

  .selectedOption {
    background-color: lightblue;
  }

  table {
    -moz-user-select:none;
  }

  .prescription_container {
    border-style: solid;
    height: 85%;
    width: 96%;
    margin-left: 26px;
    overflow: auto;
  }

  .prescription_container table {
    -moz-user-select:none;
    width: 100%;
    font-size: 20px;
  }

  .prescription_container th {
    text-align: left;
    font-size: 25px;
    background-color: lightgrey;
  }

  .tr_blue {
    background-color: #E6E6FF;
  }

  .main {
    background-color:gray;
    padding:10px;
  }

  #confirm_cpt_mgs{
    border-radius: 10px;
    position: absolute;
    background-color: #DCDCDC;
    border: 3px solid black;
    height: 32%;
    z-index: 991;
    left: 40%;
    top:20%;
    width: 53%;
    left: 20%;
  }
  #protector{
    position: absolute;
    background-color: black;
    width: 100%;
    height: 102%;
    left: 0%;
    top: 0%;
    z-index: 990;
    opacity: 0.5;
  }

  #vl_lab_trail{
    position: absolute;
    width: 90%;
    height: 60%;
    top: 10%;
    z-index: 991;
    left: 5%;
    border: 1px solid black;
    background-color: #FEE0C6;
    border-radius: 15px;
  }
  #vl_lab_trail_header{
    padding: 10px;
    background-color: gray;
    color: white;
    border-radius: 15px 15px 0px 0px;

  }
  #vl_lab_trail_footer{
    background-color: gray;
    height: 60px;
    width: 100%;
    position: absolute;
    width: 100%;
    position: absolute;
    bottom: 0px;
    border-radius: 0px 0px 15px 15px;
  }
  #vl_lab_trail_footer span{
    border-radius: 13px;
    background-color: #C1CDCD;
    position: absolute;
    bottom: 8px;
    cursor: pointer;
  }
  .vl_table_header td{
    border-bottom: 1px solid black;
    border-top: 1px solid black;
  }
  .vl_tbody td{
    border-bottom: 1px solid black;
    border-right: 1px solid black;
  }

  /*******************Drug Stock Availability*******************************/
  #stock{
    position: absolute;
    width: 95%;
    height: 25%;
    top: 61%;
    z-index: 499;
    left: 1.5%;
    border: 1px solid black;
    background-color: #FEE0C6;
    border-radius: 15px;
  }

  .table_header{
    border-radius: 15px 15px 0px 0px;
    background-color: white;
    font-size: 18px;
    font-family: "Rockwell Extra Bold", "Rockwell Bold", monospace;
    font-weight: bold;
  }

  .stock_header_right{
    position: relative;
    float: right;
    padding: 0px 0px 0px 0px;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-weight: bold;
  }

  .stock_header_left{
    position: relative;
    margin-left: 4%;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-weight: bold;
  }

  .consumption_rate_header{
    position: relative;
    float: left;
    margin-left: 0%;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-weight: bold;
  }
  .estimated_stock_out_date_header{
    position: relative;
    float: right;
    padding: 0px 10% 0px 0px;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-weight: bold;
  }

  .consumption_rate{
    float: right;
    margin-right: 66%;
  }

  .current_stock{
    float: right;
    margin-right: 35%;
  }

  .estimated_stock_out_date{
    float: left;
    margin-left: 48%;
  }

  .stock_helptext{
    position: relative;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-size: 14pt;
    left: 5%;
  }

  .number{
    color: green;
    font-weight: bold;
  }

  .stock_level_details{
    position: absolute;
    width: 61%;
    height: 28%;
    top: 20%;
    z-index: 499;
    right: 1%;
    border: 1px solid black;
    background-color: #FEE0C6;
    border-radius: 15px;
  }

  .theader{
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-size: 12pt;
    font-weight: bold;
  }

  .stock_loading_message{
    position: relative;
    left: 45%;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-size: 16pt;
    top:40%;
  }

  .drug_pack_size_header{
    position: relative;
    float: right;
    padding: 0px 10% 0px 0px;
    font-family: "Century Gothic", CenturyGothic, AppleGothic, sans-serif;
    font-weight: bold;
  }

  .drug_pack_size{
    float: right;
    margin-right: 37%;
  }
  /***********************************************************************/

  #tt_page_confirm_current_regimen .inputFrameClass{
    height: 0px !important;
  }
  .dose-input{
    float: right;
    height: 3em;
    margin-right: 16px;
    width: 120px;
    font-weight: bold;
    font-size: 16pt;
    text-align: center;
  }

  .numeric-input{
    background-color: white;
    border: 1px solid black;
    font-size: 14pt;
    height: 2em;
    margin-top: -17px;
    padding-bottom: 13px;
    top: 7px;
    width: 80%;
    color: black;
    text-align: center;
    font-weight: bold;
  }

  .regimen_category_A {
    background-color: #FFFF33;
    color: black;
  }

  .regimen_category_P {
    background-color: #8A2BE2;
    color: white;
  }

  .regimen_category_P td, .regimen_category_A td {
    padding-left: 10px;
    font-size: 25px;
    font-weight: bold;
  }

</style>

<%= javascript_include_tag "prototype"%>
<script>
  var patient_id = "<%= @patient.patient_id %>";
  var tt_cancel_destination = "/patients/treatment_dashboard/<%= @patient.patient_id %>"
  var current_regimens_for_programs = <%= @current_regimens_for_programs.to_json -%>;
  var current_regimen_names_for_programs = <%= @current_regimen_names_for_programs.to_json -%>;
  var reason_for_art = "<%= @reason_for_art_eligibility %>";
  var prescribeTBDrugs = "<%= @prescribe_tb_drugs %>";
  var prescribeARTDrugs = "<%= @prescribe_art_drugs %>";
  var artVisit = "<%= @hiv_clinic_consultation %>";
  var adverse_events = <%= @adverse_events.to_json %>
  var regimen_index = '<%= @regimen_index %>';
  var regimen_id = null;
  var tb_regimen_id = null;
  var other_regimen = null;
  var sideEffectsAnswers = <%= @side_effects_answers.to_json %>;
  var currentRegimenIndex = "<%= @current_regimen.to_i rescue '' %>";
  var today = "<%= @today %>";
  var history_of_side_effects = <%= @history_of_side_effects.to_json -%>;
  var patient_contraindications = <%= @patient_contraindications.to_json -%>;
  var date_of_first_hiv_clinic_enc = new Date('<%= @date_of_first_hiv_clinic_enc %>');
  var date_of_first_hiv_clinic_enc_string = '<%= @date_of_first_hiv_clinic_enc %>';
  var side_effects_contraindications  = <%= @side_effects_contraindications.to_json -%>

  var reasons = ['Treatment failure', 'Jandice/hepatitis','Anaemia < 8g/dl','Renal failure', 'Abacavir hypersensitivity', 'Lypodystrophy', 'Lactic Acidosis', 'Drug Rash', 'Other'] ;
<% if @patient_bean.age < 12 %>
    reasons.push("Child under 12 years");
<% end %>

  var regimens = [];
  var realTime = '<%=  @retrospective  %>';

  function changeRegimen(){
    id = document.getElementById("regimen_concept_id").value
    element = document.getElementById('nextButton')
    element.setAttribute("onmousedown", "contraindicators()");
  }

  function centerPopup(){
    jQuery('.popup-div').center();
  }

  function changeRegimenOld(){
    id = document.getElementById("regimen_concept_id").value
<% unless @side_effects_answers.blank? %>
      element = document.getElementById('nextButton')
      element.setAttribute("onmousedown", "contraindicators()")
<% else %>
      resetRegimen();
<%  end %>
  }

  function removeObs(td){
    document.getElementById("reason_for_change").value = td.value
    var reasons = document.getElementsByClassName('reasons')
    if (td.style.background != "#87cefa") {
      td.style.background = "#87cefa"

    } else{
      td.style.background = "#87cefa"
      //document.getElementById("reason_for_change").value = null
    }
    for (x= 0; x < reasons.length;  x ++){
      if (reasons[x] != td){
        reasons[x].style.background = "";
      }
    }
  }

  function updateForm(td){
    if (document.getElementById("reason_for_change").value != ""){
      document.getElementById('reason_antiretrovirals_changed_or_stopped').value = document.getElementById("reason_for_change").value;
      document.getElementById('cover').style.display='none';
      td.parentNode.style.display='none';
      gotoNextPage();
    }
  }

  function changeButton(){
    if (realTime == "false"){
      try {
        document.getElementById("reason_for_change").value = "";
      }
      catch (e){

      }
      element = document.getElementById('nextButton')
      element.setAttribute("onmousedown", "checkRegimen()")
    }
  }

  function checkIFstartpackNeed() {
    var on_tb_treatment = '<%= @on_tb_treatment %>';

<%if @patient_initiated.match(/Re-initiated|Initiation/i) %> 
      selected_regimen = document.getElementById('touchscreenInput' + tstCurrentPage).value;
      if(selected_regimen.match(/NVP|Nevirapine/i)) {
        showConfirmatoryTestPopup();
      }else if(selected_regimen.match(/ATV/i) && on_tb_treatment == 'true') {
        showTBtreatmentPopup();
      }else if(selected_regimen.length < 1){
        return
      }else{
        resetRegimen();
        gotoNextPage();
      }
<%else%>
      selected_regimen = document.getElementById('touchscreenInput' + tstCurrentPage).value;
      if(selected_regimen.match(/ATV/i) && on_tb_treatment == 'true') {
        showTBtreatmentPopup();
      }else if(selected_regimen.length < 1){
        return
      }else{
        resetRegimen();
        gotoNextPage();
      }
<%end%>
  }


  function resetRegimen(){
    element = document.getElementById('nextButton')
    element.setAttribute("onmousedown", "gotoNextPage()")
  }

  function getArt(programId) {
    var aUrl = "/regimens/check_current_regimen_index?patient_age=<%= @patient_bean.age %>&id=" + programId + "&search_string=";
    var httpRequest = new XMLHttpRequest();
    httpRequest.onreadystatechange = function() {
      set_total(httpRequest);
    };
    httpRequest.open('GET', aUrl, false);
    httpRequest.send(null);
    for (x=0; x < response.length; x ++){
      for (i =0; i < regimens.length; i ++){
        if (response[x][0].split('-')[1].toString().downcase == regimens[i].toString().downcase){

          found = response[x][0].split('-')[0]
        }
      }
    }
  }

  function set_total(req) {
    if (req.readyState == 4 && req.status == 200) {
      response = JSON.parse(req.responseText);
    }
  }

  function contraindicators_rewritten(){
    var foundEvents = []
    symptoms = '<%= @found_symptoms.join(',').humanize %>';
    symptoms = symptoms.split(',');
    id = document.getElementById("regimen_concept_id").value
    if (other_regimen != "yes"){
      //selected = $('regimen_concept_id').options[$('regimen_concept_id').selectedIndex].text.split("-")[0][0];
      selected = $('regimen_concept_id').options[$('regimen_concept_id').selectedIndex].text.split(" ")[1];
    } else {
      //selected = $('regimen_concept_id_all').options[$('regimen_concept_id_all').selectedIndex].text.split("-")[0][0];
      selected = $('regimen_concept_id_all').options[$('regimen_concept_id_all').selectedIndex].text.split(" ")[1];
    }
    for (x=0; x < adverse_events[selected.toString()]["adverse"].length; x++){
      for (i = 0; i < symptoms.length; i++){
        var re = new RegExp(symptoms[i].toString(), "i")
        if (adverse_events[selected.toString()]["adverse"][x][0].toString().match(re) != null){
          foundEvents.push(symptoms[i]);
        }
      }

    }
    for (x=0; x < adverse_events[selected.toString()]["contraindications"].length; x++){
      for (i = 0; i < symptoms.length; i++){
        var re = new RegExp(symptoms[i].toString(), "i")
        if (adverse_events[selected.toString()]["contraindications"][x][0].toString().match(re) != null){
          foundEvents.push(symptoms[i]);
        }
      }

    }

    if ((foundEvents.length > 0) && (realTime == "false" )){
      var chart_color = " adults";

<% if @patient_bean.age < 15%>
        chart_color = " paeds"
<%  end %>
      var ele = document.getElementById('cover')
      ele.style.display = "inline";
      document.body.appendChild(ele);

      var newDiv = document.createElement('div');
      newDiv.id = "alertPage";
      newDiv.style.left = "32%";
      newDiv.style.top = "30%";
      newDiv.style.width = "850px";
      newDiv.style.height = "500px";

      var display = "<div><table><tr valign='top'><th></th><th class='title'>Regimen: </th>";
      display += "<th class='title'>Contraindicators: </th>";
      display += "<th class='title'>Possible adverse event: </th>";
      display += "<th class='title'>Alternate Regimen 1: </th>";
      display += "<th class='title'>Alternate Regimen 2: </th></tr>";
      /* display += "<tr><td class='title main'>Current <td><table>";
<% (@regimen_formulations || []).each do |data| %>
                                                                                                                              regimens.push('<%=data[0].split(" ").first%>');
                                                                                                                              display += "<tr><td>" + "<%=data[0].split(" ").first%> " + "</td></tr>"
<%end%>
                                display += "</table></td><td><table>";
                                for (x=0; x < adverse_events[regimen_index[0].toString()]["contraindications"].length; x++){
                                   display += "<tr><td>" + adverse_events[regimen_index[0].toString()]["contraindications"][x][0] + "</td></tr>"
                                }
                                display += "</table></td><td><table>";
                                for (x=0; x < adverse_events[regimen_index[0].toString()]["adverse"].length; x++){
                                   display += "<tr><td>" + adverse_events[regimen_index[0].toString()]["adverse"][x][0] + "</td></tr>"
                                }
                                display += "</table></td><td><table>"
                                for (x=0; x < adverse_events[regimen_index[0].toString()]["alt1"].length; x++){
                                   display += "<tr><td>" + adverse_events[regimen_index[0].toString()]["alt1"][x][1] + "</td></tr>"
                                }
                                display += "</table></td><td><table>";
                                for (x=0; x < adverse_events[regimen_index[0].toString()]["alt2"].length; x++){
                                   display += "<tr><td>" + adverse_events[regimen_index[0].toString()]["alt2"][x][1] + "</td></tr>"
                                }
                                display += "</table></td></tr>"; //Alt 2 */
      //Selected Regimen

      display += "<tr><td colspan='6'><hr></td></tr><tr  class='" + chart_color +"'><td class='title" + chart_color +"'>Selectedd </td><td>" + $('regimen_concept_id').options[$('regimen_concept_id').selectedIndex].text.replace('(MoH Recommended)', "") + "</td><td><table>";
      for (x=0; x < adverse_events[selected.toString()]["contraindications"].length; x++){
        display += "<tr><td>" + adverse_events[selected.toString()]["contraindications"][x][0] + "</td></tr>"
      }
      display += "</table></td><td><table>"
      for (x=0; x < adverse_events[selected.toString()]["adverse"].length; x++){
        display += "<tr><td>" + adverse_events[selected.toString()]["adverse"][x][0] + "</td></tr>"
      }
      display += "</table></td><td><table>"
      for (x=0; x < adverse_events[selected.toString()]["alt1"].length; x++){
        display += "<tr><td>" + adverse_events[selected.toString()]["alt1"][x][1] + "</td></tr>"
      }
      display += "</table></td><td><table>"
      for (x=0; x < adverse_events[selected.toString()]["alt2"].length; x++){
        display += "<tr><td>" + adverse_events[selected.toString()]["alt2"][x][1] + "</td></tr>"
      }
      display += "</table></td></tr><tr><td colspan='6'><hr></td></tr><tr valign='top'><td colspan='2' class='footer'>Observed Symptoms:</td><td><table>";
<% (@found_symptoms || []).each do |data| %>
        display += "<tr><td style='font-size:12px;'>" + "<%=  data.humanize %>" + "</td></tr>"
<%end%>
      display += "</table></td><td colspan='2' class='footer'>Matching with <br>Contraindicators and events</td><td><table>"

      for (x=0; x < foundEvents.length; x++){
        display += "<tr><td style='font-size:12px;'>" + foundEvents[x] + "</td></tr>"
      }
      display += "</table></td></tr><tr><td colspan='6'><hr></td></tr></table></div>"; //Alt 2

      newDiv.innerHTML = '<div id="contraindicators">' + display + '</div>' ;
      document.body.appendChild(newDiv);

      var newBtn = document.createElement('button');
      newBtn.className = "navButton red";
      newBtn.id = "cancel";
      newBtn.innerHTML = "<span>Cancel</span>";
      newDiv.appendChild(newBtn);
      newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';")

      var newBtn = document.createElement('button');
      newBtn.className = "green navButton";
      newBtn.id = "ok";
      newBtn.innerHTML = "<span>Next</span>";
      newDiv.appendChild(newBtn);
      newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';gotoNextPage();")
    }
    else {
      resetRegimen();
      gotoNextPage();
    }
  }

  function setSelectedRow() {
    l = document.getElementsByTagName('li');
    for (i = 0 ; i < l.length ; i++) {
      if (l[i].style.backgroundColor == 'lightblue')
        updateTouchscreenInputForSelect(l[i]);
    }
  }

  function checkRegimen(){

    if (document.getElementById('continue_existing_regimen').value == "NO"){
      var ele = document.getElementById('cover')
      ele.style.display = "inline";
      document.body.appendChild(ele);

      var newDiv = document.createElement('div');
      newDiv.id = "alertPage";
      newDiv.style.left = "32%";
      newDiv.style.top = "30%";
      newDiv.style.width = "840px";
      newDiv.style.height = "500px";

      var display = "<div id='main_head'><span>Reason for regimen change</span></div>";
      display += "<div height='800'><select id='reason_for_change' size='6'>";
      display += "<option value=''></option>"
      for (x=0; x < reasons.length; x++){
        display += "<option value='" + reasons[x] + "' onmousedown='removeObs(this)' class='reasons'>" + reasons[x] + "</option>";
      }
      display += "</select></div>";
      newDiv.innerHTML = '<div id="popup">' + display + '</div>' ;
      document.body.appendChild(newDiv);

      var newBtn = document.createElement('button');
      newBtn.className = "navButton red";
      newBtn.id = "cancel";
      newBtn.innerHTML = "<span>Cancel</span>";
      newDiv.appendChild(newBtn);
      newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';")

      var newBtn = document.createElement('button');
      newBtn.className = "green navButton";
      newBtn.id = "ok";
      newBtn.innerHTML = "<span>Next</span>";
      newDiv.appendChild(newBtn);
      newBtn.setAttribute('onclick', "updateForm(this);")

    }
    else {
      resetRegimen();
      gotoNextPage();
    }
  }

  function updateConcept(){

    var dates = new Date();
    var myForm = document.getElementById('regimen_form')
    var newOption = document.createElement("input");

    newOption.type = "hidden"
    newOption.name = 'observations[][concept_name]';
    newOption.value = 'Reason antiretrovirals changed or stopped';
    myForm.appendChild(newOption);

    var newOption = document.createElement("input");
    newOption.type = "hidden"
    newOption.name = "observations[][value_text]";
    newOption.value = document.getElementById('reason_for_art_treatment_change').value;
    myForm.appendChild(newOption);

    var newOption = document.createElement("input");
    newOption.type = "hidden"
    newOption.name = "observations[][patient_id]";
    newOption.value = '<%= @patient.id %>';
    myForm.appendChild(newOption);

    var newOption = document.createElement("input");
    newOption.type = "hidden"
    newOption.name = "observations[][obs_datetime]";
    newOption.value = dates;
    myForm.appendChild(newOption);
  }

  function checkTbRegimen(){
    var ele = document.getElementById('cover')
    ele.style.display = "inline";
    document.body.appendChild(ele);

    var newText = document.createElement('div');
    newText.id = "newText";
    newText.style.display = "inline";
    newText.innerHTML = "Reason TB treatment changed";
    document.body.appendChild(newText);

    var newDiv = document.createElement('div');
    newDiv.id = "alertPage";
    newDiv.className = "inputFrameClass";
    //newDiv.innerHTML = "<p>Help</p>";
    document.body.appendChild(newDiv);

    document.getElementById('reason_for_tb_treatment_change').setAttribute('multiple', 'multiple')

    var reason = document.getElementById('reason_for_tb_treatment_change');
    reason.style.display = "block";
    reason.className = "touchscreenTextInput";
    newDiv.appendChild(reason);

    var newBtn = document.createElement('button');
    newBtn.className = "navButton red";
    newBtn.id = "cancel";
    newBtn.innerHTML = "<span>Cancel</span>";
    newDiv.appendChild(newBtn);
    newBtn.setAttribute('onclick', "document.getElementById('newText').style.display='none';document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';gotoPage(2, null, true);")

    var newBtn = document.createElement('button');
    newBtn.className = "green navButton";
    newBtn.id = "ok";
    newBtn.innerHTML = "<span>Next</span>";
    newDiv.appendChild(newBtn);
    newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none';document.getElementById('newText').style.display='none';this.parentNode.style.display='none';gotoNextPage();")

  }

  function set_patient_program_for_suggestions(programId) {
    //var program_id = encodeURIComponent($('patient_program').value);
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/regimens/suggested?patient_age=<%= @patient_bean.age %>&id=" + programId + "&search_string=");
    listSuggestions(tstCurrentPage);
    //$("regimen_concept_id").setAttribute("onmousedown", alert('yes'))
  }

  function set_patient_posible_all_suggestions(programId) {
    //var program_id = encodeURIComponent($('patient_program').value);
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/regimens/suggest_all?patient_id=<%= @patient.patient_id %>&patient_age=<%= @patient_bean.age %>&current_weight=<%= @current_weight %>&id=" + programId + "&search_string=");
    listSuggestions(tstCurrentPage);
    //$("regimen_concept_id").setAttribute("onmousedown", alert('yes'))
  }

  function set_regimen_concept_id_for_regimen(patientProgram, conceptId) {
    // It is really helpful to just set this
    if (selectedValue("continue_existing_regimen") == "YES") {
      value = current_regimens_for_programs[patientProgram];
      $('regimen_concept_id').innerHTML = "<option selected='selected'>" + value + "</option>";
    }

    if (selectedValue("tb_continue_existing_regimen") == "YES") {
      value = current_regimens_for_programs[patientProgram];
      $('tb_regimen_concept_id').innerHTML = "<option selected='selected'>" + value + "</option>";
    }
    //var concept_id = encodeURIComponent($('regimen_concept_id').value);
    if (other_regimen == "yes"){
      $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/regimens/dosing_all?patient_id=<%= @patient.patient_id %>&id=" + conceptId + "&search_string=");
      listSuggestions(tstCurrentPage);
    } else{
      $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/regimens/dosing?patient_id=<%= @patient.patient_id %>&id=" + conceptId + "&search_string=");
      listSuggestions(tstCurrentPage);
    }

  }

  function set_regimen_concept_id_for_duration(regimenConceptId) {
    return false
    //var regimen_concept_id = encodeURIComponent($('regimen_concept_id').value);
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', "/regimens/durations?id=" + regimenConceptId + "&search_string=");
    listSuggestions(tstCurrentPage);
  }

  var medication_names = null;

  function getMedicationNames() {
    medication_names = $('touchscreenInput'+tstCurrentPage).value 
  }

  var selectedDrugsHash = {};
  var prescribed_medication = [];

  function buildPrescriptionPage_all(continueExistingRegimen, patientProgram, regimenConceptId, prescriptionContainer) {
    $('touchscreenInput'+tstCurrentPage).setAttribute('type','hidden');
    $('clearButton').style.display = 'none';
    $('keyboard').style.display = 'none';
    $('viewport').style.display = 'none';
    $('helpText'+tstCurrentPage).innerHTML = "Select doses. Current patient weight:&nbsp;<%=@current_weight%>";

    backButton = $('backButton');
    onmousedown = backButton.getAttribute("onmousedown");
    backButton.removeAttribute("onmousedown")
    backButton.onmousedown = function(){
      //$('touchscreenInput'+tstCurrentPage).value = "";
      //$('regimen').value = selectedRegimenIndex;
      //regimenMain = document.getElementById('regimenMain');
      jQuery('#regimenMain').remove();
      input = document.createElement('input');
      input.type = 'hidden';
      input.name = 'regimen_main'
      input.id = 'regimenMain';
      try {
        input.value = selectedRegimenIndex;
      }
      catch(err) {
        input.value = '';
      }
      
      document.forms[0].appendChild(input)
      gotoPage(tstCurrentPage - 1, null, true);
      resetNextButton();
    }
    //var reg_id = encodeURIComponent(regimenConceptId);
    var names = medication_names.split(';').join('::');

    current_page = $('page'+tstCurrentPage);

    html = "&nbsp;<div id = '" + prescriptionContainer + "' class='prescription_container' ><table><tr>"
    //html += "<th>Drug name</th><th>Dose</th><th>Units</th><th>Daily dose</th>"
    html += "</tr></table></div>"
    current_page.innerHTML += html
    selectedDrugsHash = {};
    jQuery('.custom-input').remove(); //Remove old inputs with custom-input as a class name if any. For capturing doses
    
    new Ajax.Request("/regimens/formulations_all?names=" + names ,{method:'get',onSuccess: function(transport){
        formulations = JSON.parse(transport.responseText) || "";
        if(formulations.length > 0 && formulations != "[[[]]]" && formulations != "[]"){
          //formulations = formulations[0]
          prescription_container = $(prescriptionContainer);
          html = "<table>"
          html += "<!--tr><th>&nbsp;</th><th>&nbsp;</th><th colspan='2' style='text-align: center;'>Daily dose</th></tr-->"
          html += "<tr><th>Drug name</th><th>Units</th><th style='text-align: right; padding-right: 9px;'>";
          html += "AM</th><th style='text-align: right; padding-right: 9px;'>PM</th></tr>"
        
          prescribed_medication = [];
      
          for (i = 0 ; i < formulations.length ; i++) {
            data = formulations[i]
            regimen_id = data[2]
            html += "<tr><td>" + data[0] + "</td>"
            html += "<td>" + data[1] + "</td>"
            html += "<td><input key='" + data[0] + "_am' onmousedown='numericKepadPopup(this)' type='text' size='4' class='dose-input'></input></td>"
            html += "<td><input key='" + data[0] + "_pm' onmousedown='numericKepadPopup(this)' type='text' size='4' class='dose-input'></input></td>"
            //html += "<td style='text-align: center;'><button class='btn-custom'><span>AM</span>";
            //html += "</button>&nbsp;<button class='btn-custom'><span>PM</span></button></td></tr>";
            
            $('touchscreenInput'+tstCurrentPage).value += data[0] + ':';
            $('touchscreenInput'+tstCurrentPage).value += " " + data[1] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[3] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[2] ;
            selectedDrugsHash[data[0]] = {am: '', pm: ''};
            createHiddenInputsForDoses(data[0])
          }


          html += "</table>";
          prescription_container.innerHTML = html
        }

      }});

    setBackButton();
    __$('nextButton').onmousedown = function(){
      validateCustomeDosesInput();
    }
  }

  function validateCustomeDosesInput(){
    incomplete_doses = [];
    for (var key in selectedDrugsHash){
      am_dose = selectedDrugsHash[key]["am"];
      pm_dose = selectedDrugsHash[key]["pm"];
      if (am_dose.length == 0 || pm_dose.length == 0){
        incomplete_doses.push(key);
      }
    }
    if (incomplete_doses.length > 0){
      showMessage("Incomplete Doses for the following drugs <br />" + incomplete_doses.join('<br />'))
    }else{
      gotoNextPage();
    }
  }

  function setBackButton(){
    backButton = jQuery('#backButton')[0];
    if (backButton){
      mouseEvent = backButton.getAttribute('onmousedown');
      if (mouseEvent){
        if (!mouseEvent.match(/resetNextButton/i)){
          onmousedownevent = backButton.getAttribute('onmousedown') + '; resetNextButton()';
          backButton.setAttribute('onmousedown', onmousedownevent);
        }
      }
    }
  }

  function resetNextButton(){
    __$('nextButton').onmousedown = function(){
      gotoNextPage();
    }
  }
  
  function createHiddenInputsForDoses(drugName){
    //jQuery('#' + drugName + '_am').remove();
    //jQuery('#' + drugName + '_pm').remove();
    previousDrugAmInput = document.getElementById(drugName + '_am');
    if (previousDrugAmInput){
      previousDrugAmInput.parentNode.removeChild(previousDrugAmInput)
    }

    previousDrugPmInput = document.getElementById(drugName + '_pm');
    if (previousDrugPmInput){
      previousDrugPmInput.parentNode.removeChild(previousDrugPmInput);
    }

    amInput = document.createElement('input');
    amInput.type = 'hidden';
    amInput.className = 'custom-input';
    amInput.name = 'drug_names[' + drugName + '][am]';
    amInput.id = drugName + '_am';


    pmInput = document.createElement('input');
    pmInput.type = 'hidden';
    pmInput.className = 'custom-input'
    pmInput.name = 'drug_names[' + drugName + '][pm]';
    pmInput.id = drugName + '_pm';

    form = jQuery('form')[0];
    form.appendChild(amInput);
    form.appendChild(pmInput);
  }
  var CPTDrugName = '<%= @cpt_dose[:drug_name] rescue ''%>';
  var IPTDrugName = '<%= @ipt_dose[:drug_name] rescue ''%>';

  function createHiddenInputsForCPTDoses(drugName){
    previousDrugAmInput = document.getElementById(drugName + '_am');
    if (previousDrugAmInput){
      previousDrugAmInput.parentNode.removeChild(previousDrugAmInput)
    }

    previousDrugPmInput = document.getElementById(drugName + '_pm');
    if (previousDrugPmInput){
      previousDrugPmInput.parentNode.removeChild(previousDrugPmInput);
    }

    amInput = document.createElement('input');
    amInput.type = 'hidden';
    amInput.className = 'custom-input';
    amInput.name = 'drug_names[' + drugName + '][am]';
    amInput.id = drugName + '_am';


    pmInput = document.createElement('input');
    pmInput.type = 'hidden';
    pmInput.className = 'custom-input'
    pmInput.name = 'drug_names[' + drugName + '][pm]';
    pmInput.id = drugName + '_pm';

    form = jQuery('form')[0];
    form.appendChild(amInput);
    form.appendChild(pmInput);
  }

  function hideStockLevelDetails(){
    document.getElementsByClassName("stock_level_details")[0].style.display='none';
  }

  function removeOnclickEvent(){
    clearButton = document.getElementById('clearButton');
    clearButton.onclick = null;
  }

  function showAvailableStock(){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      available_options = document.getElementsByTagName('li');
      for(i=0; i<available_options.length; i++){
        available_options[i].onclick = function(){
          showDrugStockDetails(parseInt(this.getAttribute("tstvalue")));
        }
      }

      available_options = document.getElementsByTagName('li');
      for(i=0; i<available_options.length; i++){
        available_options[i].onclick = function(){
          updateTouchscreenInputForSelect(this);
          showDrugStockDetails(parseInt(this.getAttribute("tstvalue")));
        }
      }

      clearButton = document.getElementById('clearButton');
      clearButton.onclick = function(){
        showAvailableStock();
      }

      clearButton = document.getElementById('clearButton');
      clearButton.onclick = function(){
        showAvailableStock();
      }

      jQuery.ajax({
        type: "POST",
        url: "/regimens/check_stock_levels",
        data: "regimen=" + regimen_id + "&duration=30" + "&patient_id=<%= @patient.id %>",
        success: function(result){
          stock_hash = result;
          element = document.getElementsByClassName("stock_level_details")[0];
          html = "<table cellspacing='0' style='width:100%; border-collapse: separate;'>";
          html+="<tr style='line-height: 2em;'>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-left-radius: 15px; '><span class='theader'>Drug Name</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; '><span class='theader'>Current Stock(tins)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-right-radius: 15px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";
          html+="</tr>";
          for (var drug_id in stock_hash){
            html+="<tr style='line-height:1.8em;'>";
            drug_name = drug_id;
            current_stock = stock_hash[drug_id]["current_stock"];
            drug_pack_size = stock_hash[drug_id]["drug_pack_size"];

            html+="<td style='border-bottom:1px solid;'><span style='position:relative;'>" + drug_name + "</span></td>";
            html+="<td style='border-bottom:1px solid;'><span style='position:relative; left:30%;'>" + current_stock + "</span></td>";
            html+="<td style='border-bottom:1px solid;'><span style='position:relative; left:30%;'>" + drug_pack_size + "</span></td>";
            html+="</tr>";
          }
          html+="</table>";
          element.style.display='inline';
          element.innerHTML = html;
        }
      });
<% end %>
  }

  function showDrugStockDetails(duration){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      jQuery.ajax({
        type: "POST",
        url: "/regimens/check_stock_levels",
        data: "regimen=" + regimen_id + "&duration=" + duration + "&patient_id=<%= @patient.id %>",
        beforeSend:function(){
          data = "<span class='stock_loading_message'>Loading ...</span>"
          document.getElementsByClassName('stock_level_details')[0].innerHTML=data;
        },
        success: function(result){
          stock_hash = result;
          element = document.getElementsByClassName("stock_level_details")[0];
          html = "<table cellspacing='0' style='width:100%; border-collapse: separate;'>";
          html+="<tr style='line-height: 2em;'>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-left-radius: 15px; '><span class='theader'>Drug Name</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1;'><span class='theader'>Amount prescribed(tabs)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1;'><span class='theader'>Current Stock(tins)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-right-radius: 15px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";

          html+="</tr>";
          low_stock_drugs = []
          for (var drug_id in stock_hash){
            html+="<tr style='line-height:1.8em;'>";
            drug_name = drug_id;
            current_stock = stock_hash[drug_id]["current_stock"];
            required_amount = stock_hash[drug_id]["required_amount"];
            drug_pack_size = stock_hash[drug_id]["drug_pack_size"];
            low_stock_warning = stock_hash[drug_id]["low_stock_warning"];

            html+="<td style='border-bottom:1px solid;'><span style='position:relative;'>" + drug_name + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid'><span style='position:relative; right:46%;'>" + required_amount + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid;'><span style='position:relative; right:46%;'>" + current_stock + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid;'><span style='position:relative; right:46%;'>" + drug_pack_size + "</span></td>";

            if (low_stock_warning){
              low_stock_drugs.push(drug_name);
            }

            html+="</tr>";
          }

          if (low_stock_drugs.length >= 1){
            html+="<tr style='line-height:0.5em;'><td colspan='4'>&nbsp;</td></tr>";
            html+="<tr><td colspan='4'><i style='color:green; font-weight:bold;'>Notes:</i></td></tr>";
            for (i=0; i<low_stock_drugs.length; i++){
              drug_id = low_stock_drugs[i];
              recommended_duration = stock_hash[drug_id]["recommended_duration"];
              html+="<tr>";
              html+="<td colspan='4' style='border-bottom:1px solid;'><span style='position:relative; left:2%;'>"
              html+="<i>" + low_stock_drugs[i] + "</i> <i style='color:red; font-weight:bold;'>(Low Stock)</i></span> "
              html+="<sub style='color:green; font-weight:bold;'><%='&nbsp;' * 6 + ' '+ ' *' * 5; %></sub> <i style='font-weight:bold;'>Recommendation:</i>"
              html+= "<sub style='color:green; font-weight:bold;'><%='&nbsp;' * 2 + ' '+ ' *' * 5 + '' + '&nbsp;' * 2; %></sub><b style='color:green;'>(<i>" + recommended_duration + "</i>)</b></td>";
              html+="</tr>";
            }
          }

          html+="</table>";
          element.style.display='inline';
          element.innerHTML = html;
        }
      });
<% end %>
  }

  function showDrugStockAvailability(reg_id){
    /*
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
            jQuery.ajax({
              type: "POST",
              url: "/regimens/drug_stock_availability",
              data: "concept_id=" + reg_id + "&patient_id=<%= @patient.id %>",
              success: function(result){
                drug_stock = document.getElementById('drug_stock');
                stock_hash = result;
                html = "<div id='stock'>";
                html += "<div style='position: absolute; width:100%;'>";
                html += "<table cellspacing='0' style='position:absolute; width:100%; left: 0%;'>";
                html += "<tr>";
                html += "<td class='table_header' colspan='5'><center><span>Drug Stock Availability</span></center></td>";
                html += "</tr>";

                html += "<tr style='background-color: #CDC8B1; line-height: 2em; font-size: 18px;'>";
                html += "<td style='min-width: 130px;'><span class='stock_header_left'>Drug Name</span></td>";
                html += "<td style='min-width: 130px;'><span class='consumption_rate_header'>Consumption Rate(tabs)</span></td>";
                html += "<td style='min-width: 100px;'><span class='stock_header_right'>Available Stock(tins)</span></td>";
                html += "<td style='min-width: 100px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";

                html += "<td style='min-width: 100px;'><span class='estimated_stock_out_date_header'>Estimated stock out date</span></td>";
                html += "</tr>";

                html += "<tbody>";
                for (var drug_id in stock_hash){
                  drug_name = stock_hash[drug_id]["drug_name"];
                  current_stock = stock_hash[drug_id]["current_stock"];
                  consumption_rate = stock_hash[drug_id]["consumption_rate"];
                  estimated_stock_out_date = stock_hash[drug_id]["estimated_stock_out_date"];
                  drug_pack_size = stock_hash[drug_id]["drug_pack_size"];

                  html += "<tr>";
                  html += "<td><span class='drug_name'>" + drug_name + "</span></td>";
                  html += "<td><span class='consumption_rate'>" + consumption_rate + "</span></td>";
                  html += "<td><span class='current_stock'>" + current_stock + "</span></td>";
                  html += "<td><span class='drug_pack_size'>" + drug_pack_size + "</span></td>";
                  html += "<td><span class='estimated_stock_out_date'>" + estimated_stock_out_date + "</span></td>";
                  html += "</tr>";
                }

                html += "<tbody>";
                html += "</table>";
                html += "</div>";
                html += "</div>";
                drug_stock.style.display='inline';
                drug_stock.innerHTML = html;
              }
            });
<% end %>
     */
  }

  function showDrugStock(){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      available_options = document.getElementsByTagName('li');
      for(i=0; i<available_options.length; i++){
        available_options[i].onclick = function(){
          showDrugStockDetails(parseInt(this.getAttribute("tstvalue")));
        }
      }

      clearButton = document.getElementById('clearButton');
      clearButton.onclick = function(){
        showAvailableStock();
      }

      jQuery.ajax({
        type: "POST",
        url: "/regimens/check_stock_levels",
        data: "regimen=" + regimen_id + "&duration=30" + "&patient_id=<%= @patient.id %>",
        success: function(result){
          stock_hash = result;
          element = document.getElementsByClassName("stock_level_details")[0];
          html = "<table cellspacing='0' style='width:100%; border-collapse: separate;'>";
          html+="<tr style='line-height: 2em;'>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-left-radius: 15px; '><span class='theader'>Drug Name</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; '><span class='theader'>Current Stock(tins)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-right-radius: 15px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";
          html+="</tr>";
          for (var drug_id in stock_hash){
            html+="<tr style='line-height:1.8em;'>";
            drug_name = drug_id;
            current_stock = stock_hash[drug_id]["current_stock"];
            drug_pack_size = stock_hash[drug_id]["drug_pack_size"];

            html+="<td style='border-bottom:1px solid;'><span style='position:relative;'>" + drug_name + "</span></td>";
            html+="<td style='border-bottom:1px solid;'><span style='position:relative; left:30%;'>" + current_stock + "</span></td>";
            html+="<td style='border-bottom:1px solid;'><span style='position:relative; left:30%;'>" + drug_pack_size + "</span></td>";
            html+="</tr>";
          }
          html+="</table>";
          element.style.display='inline';
          element.innerHTML = html;
        }
      });
<% end %>
  }

  function showDrugStockDetails(duration){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      jQuery.ajax({
        type: "POST",
        url: "/regimens/check_stock_levels",
        data: "regimen=" + regimen_id + "&duration=" + duration + "&patient_id=<%= @patient.id %>",
        beforeSend:function(){
          data = "<span class='stock_loading_message'>Loading ...</span>"
          document.getElementsByClassName('stock_level_details')[0].innerHTML=data;
        },
        success: function(result){
          stock_hash = result;
          element = document.getElementsByClassName("stock_level_details")[0];
          html = "<table cellspacing='0' style='width:100%; border-collapse: separate;'>";
          html+="<tr style='line-height: 2em;'>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-left-radius: 15px; '><span class='theader'>Drug Name</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1;'><span class='theader'>Amount prescribed(tabs)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1;'><span class='theader'>Current Stock(tins)</span></td>";
          html+="<td style='border-bottom:1px solid; background-color: #CDC8B1; border-top-right-radius: 15px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";

          html+="</tr>";
          low_stock_drugs = []
          for (var drug_id in stock_hash){
            html+="<tr style='line-height:1.8em;'>";
            drug_name = drug_id;
            current_stock = stock_hash[drug_id]["current_stock"];
            required_amount = stock_hash[drug_id]["required_amount"];
            drug_pack_size = stock_hash[drug_id]["drug_pack_size"];
            low_stock_warning = stock_hash[drug_id]["low_stock_warning"];

            html+="<td style='border-bottom:1px solid;'><span style='position:relative;'>" + drug_name + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid'><span style='position:relative; right:46%;'>" + required_amount + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid;'><span style='position:relative; right:46%;'>" + current_stock + "</span></td>";
            html+="<td style='text-align:right; border-bottom:1px solid;'><span style='position:relative; right:46%;'>" + drug_pack_size + "</span></td>";

            if (low_stock_warning){
              low_stock_drugs.push(drug_name);
            }

            html+="</tr>";
          }

          if (low_stock_drugs.length >= 1){
            html+="<tr style='line-height:0.5em;'><td colspan='4'>&nbsp;</td></tr>";
            html+="<tr><td colspan='4'><i style='color:green; font-weight:bold;'>Notes:</i></td></tr>";
            for (i=0; i<low_stock_drugs.length; i++){
              drug_id = low_stock_drugs[i];
              recommended_duration = stock_hash[drug_id]["recommended_duration"];
              html+="<tr>";
              html+="<td colspan='4' style='border-bottom:1px solid;'><span style='position:relative; left:2%;'>"
              html+="<i>" + low_stock_drugs[i] + "</i> <i style='color:red; font-weight:bold;'>(Low Stock)</i></span> "
              html+="<sub style='color:green; font-weight:bold;'><%='&nbsp;' * 6 + ' '+ ' *' * 5; %></sub> <i style='font-weight:bold;'>Recommendation:</i>"
              html+= "<sub style='color:green; font-weight:bold;'><%='&nbsp;' * 2 + ' '+ ' *' * 5 + '' + '&nbsp;' * 2; %></sub><b style='color:green;'>(<i>" + recommended_duration + "</i>)</b></td>";
              html+="</tr>";
            }
          }

          html+="</table>";
          element.style.display='inline';
          element.innerHTML = html;
        }
      });
<% end %>
  }

  function showDrugStockAvailability(reg_id){
    /*
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
            jQuery.ajax({
              type: "POST",
              url: "/regimens/drug_stock_availability",
              data: "concept_id=" + reg_id + "&patient_id=<%= @patient.id %>",
              success: function(result){
                drug_stock = document.getElementById('drug_stock');
                stock_hash = result;
                html = "<div id='stock'>";
                html += "<div style='position: absolute; width:100%;'>";
                html += "<table cellspacing='0' style='position:absolute; width:100%; left: 0%;'>";
                html += "<tr>";
                html += "<td class='table_header' colspan='5'><center><span>Drug Stock Availability</span></center></td>";
                html += "</tr>";

                html += "<tr style='background-color: #CDC8B1; line-height: 2em; font-size: 18px;'>";
                html += "<td style='min-width: 130px;'><span class='stock_header_left'>Drug Name</span></td>";
                html += "<td style='min-width: 130px;'><span class='consumption_rate_header'>Consumption Rate(tabs)</span></td>";
                html += "<td style='min-width: 100px;'><span class='stock_header_right'>Available Stock(tins)</span></td>";
                html += "<td style='min-width: 100px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";

                html += "<td style='min-width: 100px;'><span class='estimated_stock_out_date_header'>Estimated stock out date</span></td>";
                html += "</tr>";

                html += "<tbody>";
                for (var drug_id in stock_hash){
                  drug_name = stock_hash[drug_id]["drug_name"];
                  current_stock = stock_hash[drug_id]["current_stock"];
                  consumption_rate = stock_hash[drug_id]["consumption_rate"];
                  estimated_stock_out_date = stock_hash[drug_id]["estimated_stock_out_date"];
                  drug_pack_size = stock_hash[drug_id]["drug_pack_size"];

                  html += "<tr>";
                  html += "<td><span class='drug_name'>" + drug_name + "</span></td>";
                  html += "<td><span class='consumption_rate'>" + consumption_rate + "</span></td>";
                  html += "<td><span class='current_stock'>" + current_stock + "</span></td>";
                  html += "<td><span class='drug_pack_size'>" + drug_pack_size + "</span></td>";
                  html += "<td><span class='estimated_stock_out_date'>" + estimated_stock_out_date + "</span></td>";
                  html += "</tr>";
                }

                html += "<tbody>";
                html += "</table>";
                html += "</div>";
                html += "</div>";
                drug_stock.style.display='inline';
                drug_stock.innerHTML = html;
              }
            });
<% end %>*/
  }

  function showDrugStock(){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      drug_stock = document.getElementById('drug_stock');
      html = "<div id='stock'>";
      html += "<div style='position: absolute; width:100%;'>";
      html += "<table cellspacing='0' style='position:absolute; width:100%; left: 0%;'>";
      html += "<tr>";
      html += "<td class='table_header' colspan='5'><center><span>Drug Stock Availability</span></center></td>";
      html += "</tr>";

      html += "<tr style='background-color: #CDC8B1; line-height: 2em; font-size: 18px;'>";
      html += "<td style='min-width: 130px;'><span class='stock_header_left'>Drug Name</span></td>";
      html += "<td style='min-width: 130px;'><span class='consumption_rate_header'>Consumption Rate(tabs)</span></td>";
      html += "<td style='min-width: 100px;'><span class='stock_header_right'>Available Stock(tins)</span></td>";
      html += "<td style='min-width: 100px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";
      html += "<td style='min-width: 100px;'><span class='estimated_stock_out_date_header'>Estimated stock out date</span></td>";
      html += "</tr>";

      html += "<tbody>";

  <% (@drug_stock || {}).each do |drug_id, values| %>
    <%
    drug_name = values["drug_name"]
    current_stock = values["current_stock"]
    consumption_rate = values["consumption_rate"]
    estimated_stock_out_date = values["estimated_stock_out_date"]
    drug_pack_size = values["drug_pack_size"];
  %>
        html += "<tr>";
        html += "<td><span class='drug_name'><%= drug_name %></span></td>";
        html += "<td><span class='consumption_rate'><%= consumption_rate %></span></td>";
        html += "<td><span class='current_stock'><%= current_stock %></span></td>";
        html += "<td><span class='drug_pack_size'><%= drug_pack_size %></span></td>";
        html += "<td><span class='estimated_stock_out_date'><%= estimated_stock_out_date %></span></td>";
        html += "</tr>";
  <% end  %>

      html += "<tbody>";
      html += "</table>";
      html += "</div>";
      html += "</div>";
      drug_stock.style.display='inline';
      drug_stock.innerHTML = html;

<% end %>
  }

  function showCptDrugStock(){
<% if (CoreService.get_global_property_value('activate.drug.management').to_s == "true" rescue false) %>
      drug_stock = document.getElementById('drug_stock');
      html = "<div id='stock'>";
      html += "<div style='position: absolute; width:100%;'>";
      html += "<table cellspacing='0' style='position:absolute; width:100%; left: 0%;'>";
      html += "<tr>";
      html += "<td class='table_header' colspan='5'><center><span>CPT Drug Stock Availability</span></center></td>";
      html += "</tr>";

      html += "<tr style='background-color: #CDC8B1; line-height: 2em; font-size: 18px;'>";
      html += "<td style='min-width: 130px;'><span class='stock_header_left'>Drug Name</span></td>";
      html += "<td style='min-width: 130px;'><span class='consumption_rate_header'>Consumption Rate(tabs)</span></td>";
      html += "<td style='min-width: 100px;'><span class='stock_header_right'>Available Stock</span></td>";
      html += "<td style='min-width: 100px;'><span class='drug_pack_size_header'>Pack Size(tabs)</span></td>";
      html += "<td style='min-width: 100px;'><span class='estimated_stock_out_date_header'>Estimated stock out date</span></td>";
      html += "</tr>";

      html += "<tbody>";

  <% @cpt_drug_stock.each do |drug_id, values| %>
    <%
    drug_name = values["drug_name"]
    current_stock = values["current_stock"]
    consumption_rate = values["consumption_rate"]
    drug_pack_size = values["drug_pack_size"]
    estimated_stock_out_date = values["estimated_stock_out_date"]
  %>
        html += "<tr>";
        html += "<td><span class='drug_name'><%= drug_name %></span></td>";
        html += "<td><span class='consumption_rate'><%= consumption_rate %></span></td>";
        html += "<td><span class='current_stock'><%= current_stock %></span></td>";
        html += "<td><span class='drug_pack_size'><%= drug_pack_size %></span></td>";
        html += "<td><span class='estimated_stock_out_date'><%= estimated_stock_out_date %></span></td>";
        html += "</tr>";
  <% end  %>

      html += "<tbody>";
      html += "</table>";
      html += "</div>";
      html += "</div>";
      drug_stock.style.display='inline';
      drug_stock.innerHTML = html;
<%end%>

  }

  function hideStock(){
    if ($('drug_stock')){$('drug_stock').style.display= 'none'};
  }

  function buildPrescriptionPage(continueExistingRegimen, patientProgram, regimenConceptId, prescriptionContainer) {
    $('touchscreenInput'+tstCurrentPage).setAttribute('type','hidden');
    $('clearButton').style.display = 'none';
    $('keyboard').style.display = 'none';
    $('viewport').style.display = 'none';
    $('helpText'+tstCurrentPage).innerHTML = "Current patient weight:&nbsp;<b><%=@current_weight%></b>";

    arv_change_input = document.getElementById('reason_antiretrovirals_changed_or_stopped');
    if (arv_change_input) arv_change_input.value = '' //clear the reason. Issues of clicking Back button

<% if @fast_track_patient == true && !@current_regimen.blank? %>
      $('backButton').style.display = 'none';
<% end %>
  
    if(continueExistingRegimen == 'YES') {
      var reg_id = current_regimens_for_programs[patientProgram];
    } else {
      var reg_id = encodeURIComponent(regimenConceptId);
    }

    var reg_id = encodeURIComponent(regimenConceptId);
    current_page = $('page'+tstCurrentPage);

    html = "&nbsp;<div id = '" + prescriptionContainer + "' class='prescription_container' ><table><tr>"
    /* html += "<th>Drug name</th><th>Dose</th><th>Units</th><th>Daily dose</th>"*/
    html += "</tr></table></div>"
    current_page.innerHTML += html;

    prescribed_medication = [];
    selectedDrugsHash = {};

    new Ajax.Request("/regimens/formulations?patient_id=<%=@patient.id %>&id=" + reg_id ,{method:'get',onSuccess: function(transport){
        formulations = JSON.parse(transport.responseText) || "";
        if(formulations.length > 0 && formulations != "[[[]]]" && formulations != "[]"){
          prescription_container = $(prescriptionContainer);
          html = "<table>"
          html += "<!--tr><th>&nbsp;</th>&nbsp;<th>&nbsp;</th><th colspan='2' style='text-align: center;'>Daily dose</th></tr-->"
          html += "<tr><th>Drug name</th><th>Units</th><th style='text-align: right; padding-right: 5px;'>AM</th>";
          html += "<th style='text-align: right; padding-right: 5px;'>PM</th></tr>"

          var cpt_mgs = document.getElementById('cpt_mgs');
          if (cpt_mgs) cpt_mgs.value = null;

          var ipt_mgs = document.getElementById('ipt_mgs');
          if (ipt_mgs) ipt_mgs.value = null;

          var pyridoxine_mgs = document.getElementById('pyridoxine_value');
          if (pyridoxine_mgs) pyridoxine_mgs.value = null;

          var pyridoxineTouch_input = document.getElementById('pyridoxine');
          if (pyridoxineTouch_input) pyridoxineTouch_input.value = null;

          for (i = 0 ; i < formulations.length ; i++) {
            data = formulations[i];

            regimen_category = data['category'];

            if (data['regimen_index']) regimen_id = data['regimen_index']
            
            prescribed_medication.push([data['drug_name'], data['units'], data['am'], data['pm']]);

            html += "<tr class='regimen_category_" + regimen_category + "'><td>" + data['drug_name'] + "</td>"
            html += "<td style='text-align: left; padding-left: 5px;'>" + data['units'] + "</td>"
            html += "<td style='text-align: right; padding-right: 5px;'>" + data['am'] + "</td>"
            html += "<td style='text-align: right; padding-right: 5px;'>" + data['pm'] + "</td></tr>"
            $('touchscreenInput'+tstCurrentPage).value += data[0] + ':';
            $('touchscreenInput'+tstCurrentPage).value += " " + data[1] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[3] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[2] ;

            if (data['drug_name'].match(/cotrim/i)){
              if (data['drug_name'].match(/960/i)){
                cpt_mgs.value = 960;
              }else if (data['drug_name'].match(/480/i)){
                cpt_mgs.value = 480;
              }else{
                cpt_mgs.value = 120;
              }
            }

            if (data['drug_name'].match(/INH/i)){
              if (data['drug_name'].match(/300/i)){
                ipt_mgs.value = 300;
              }else if (data['drug_name'].match(/250/i)){
                ipt_mgs.value = 250;
              }else if (data['drug_name'].match(/200/i)){
                ipt_mgs.value = 200;
              }
              else if (data['drug_name'].match(/150/i)){
                ipt_mgs.value = 150;
              }else{
                ipt_mgs.value = 100;
              }
            }

            if (data['drug_name'].match(/Pyridoxine/i)){
              pyridoxineTouch_input.value = 'YES'
              pyridoxine_mgs.value = 25;
            }
          }
          html += "</table>"
          prescription_container.innerHTML = html
        }
      }});

  }

  function buildPrescriptionPageForCPTorIPT(prescriptionContainer){
    $('touchscreenInput'+tstCurrentPage).setAttribute('type','hidden');
    $('clearButton').style.display = 'none';
    $('keyboard').style.display = 'none';
    $('viewport').style.display = 'none';
    jQuery('#backButton').hide();
    $('helpText'+tstCurrentPage).innerHTML = "Current patient weight:&nbsp;<b><%=@current_weight%></b>";

    var reg_id = null;
    /*if(continueExistingRegimen == 'YES') {
      var reg_id = current_regimens_for_programs[patientProgram];
    } else {
      var reg_id = encodeURIComponent(regimenConceptId);
    }*/

    //var reg_id = encodeURIComponent(regimenConceptId);
    current_page = $('page'+tstCurrentPage);

    html = "&nbsp;<div id = '" + prescriptionContainer + "' class='prescription_container' ><table><tr>"
    /* html += "<th>Drug name</th><th>Dose</th><th>Units</th><th>Daily dose</th>"*/
    html += "</tr></table></div>"
    current_page.innerHTML += html;

    new Ajax.Request("/regimens/formulations_cpt_or_ipt?patient_id=<%=@patient.id %>&id=" + reg_id ,{method:'get',onSuccess: function(transport){
        formulations = JSON.parse(transport.responseText) || "";
        if(formulations.length > 0 && formulations != "[[[]]]" && formulations != "[]"){
          //formulations = formulations[0]
          prescription_container = $(prescriptionContainer);
          html = "<table>"
          html += "<!--tr><th>&nbsp;</th>&nbsp;<th>&nbsp;</th><th colspan='2' style='text-align: center;'>Daily dose</th></tr-->"
          html += "<tr><th>Drug name</th><th>Units</th><th style='text-align: right; padding-right: 5px;'>AM</th>";
          html += "<th style='text-align: right; padding-right: 5px;'>PM</th></tr>"

          var cpt_mgs = document.getElementById('cpt_mgs');
          cpt_mgs.value = null;

          var ipt_mgs = document.getElementById('ipt_mgs');
          if (ipt_mgs) ipt_mgs.value = null;

          var pyridoxine_mgs = document.getElementById('pyridoxine_value');
          if (pyridoxine_mgs) pyridoxine_mgs.value = null;

          var pyridoxineTouch_input = document.getElementById('pyridoxine');
          if (pyridoxineTouch_input) pyridoxineTouch_input.value = null;
          
          for (i = 0 ; i < formulations.length ; i++) {
            data = formulations[i];

            regimen_category = data['category'];

            if (data['regimen_index']) regimen_id = data['regimen_index']

            html += "<tr class='regimen_category_" + regimen_category + "'><td>" + data['drug_name'] + "</td>"
            html += "<td style='text-align: left; padding-left: 5px;'>" + data['units'] + "</td>"
            html += "<td style='text-align: right; padding-right: 5px;'>" + data['am'] + "</td>"
            html += "<td style='text-align: right; padding-right: 5px;'>" + data['pm'] + "</td></tr>"
            $('touchscreenInput'+tstCurrentPage).value += data[0] + ':';
            $('touchscreenInput'+tstCurrentPage).value += " " + data[1] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[3] ;
            $('touchscreenInput'+tstCurrentPage).value += " " + data[2] ;

            if (data['drug_name'].match(/cotrim/i)){
              if (data['drug_name'].match(/960/i)){
                cpt_mgs.value = 960;
              }else if (data['drug_name'].match(/480/i)){
                cpt_mgs.value = 480;
              }else{
                cpt_mgs.value = 120;
              }
            }

            if (data['drug_name'].match(/INH/i)){
              if (data['drug_name'].match(/300/i)){
                ipt_mgs.value = 300;
              }else if (data['drug_name'].match(/250/i)){
                ipt_mgs.value = 250;
              }else if (data['drug_name'].match(/200/i)){
                ipt_mgs.value = 200;
              }
              else if (data['drug_name'].match(/150/i)){
                ipt_mgs.value = 150;
              }else{
                ipt_mgs.value = 100;
              }
            }

            if (data['drug_name'].match(/Pyridoxine/i)){
              pyridoxineTouch_input.value = 'YES'
              pyridoxine_mgs.value = 50;
            }

          }
          html += "</table>"
          prescription_container.innerHTML = html
        }
      }});
  }

  function showTbDrugs() {
    var prescription_container = $("previous_drugs_dispensed");
    var html = "<table>"
    html += "<tr><th>Drug name</th><th>Dose</th><th>Units</th><th>Daily dose</th></tr>"
<% (@tb_regimen_formulations || []).each do |data| %>
      regimen_id = <%= data[4]%>
      html += "<tr><td>" + "<%=data[0]%>" + "</td>"
      html += "<td style='text-align:center;'>" + "<%=data[1]%>" + "</td>"
      html += "<td>" + "<%=data[3]%>" + "</td>"
      html += "<td>" + "<%=data[2]%>" + "</td></tr>"
<%end%>
    html += "</table>"
    prescription_container.innerHTML = html
    prescription_container.style.display = "inline";
  }

  function setRegimenId(regimen) {

    if(regimen == 'ART') {
      if (other_regimen == "yes"){
        $('regimen_all').value = regimen_id
      } else {
        $('regimen').value = regimen_id
      }
    } else if(regimen == 'TB'){
      $('tb_regimen').value = regimen_id
    } else {
      $('tb_continuation_regimen').value = regimen_id
    }
    $('clearButton').style.display = 'inline';
    $('keyboard').style.display = 'inline';
    $('viewport').style.display = 'inline';
  }

  function hasReasonForART() {
    return true; //To be modified later. After new Guidelines. 
    if(reason_for_art.length == 0 || reason_for_art.match(/NONE/i)) {
      return false;
    }

    return true;
  }

  function hasARTVisit() {
    returnValue = false;

    if (artVisit == "true") {
      returnValue = true;
    } else {
      returnValue = false;
    }

    return returnValue;
  }

  function prescribeAntiretroviralDrugs() {
    var prescribe = false;
    if(prescribeARTDrugs == 'true'){
      prescribe = true;
    }
    return prescribe;
  }

  function prescribeCPT() {
    var prescribe = false;
<%if @prescribe_cpt_set%>
      prescribe = true;
<%end%>
    return prescribe;
  }

  function prescribeIPT() {
    var prescribe = false;
<%if @prescribe_ipt_set%>
      prescribe = true;
<%end%>
    return prescribe;
  }

  function isRegisteredForTB() {
    var isRegistered = false;
    if(prescribeTBDrugs == 'true'){
      isRegistered = true;
    }
    return isRegistered;
  }

  function showResults(){
    var innerHtml = '';
    var resultString = '';

<% if @patient_bean.sex == 'Female' && @patient_bean.age > 14 %>
      resultString = '<b>Pregnancy Status:</b><%=" #{@is_patient_pregnant_value}"%><br><br>'
<% end %>

<% if @family_planning_methods.length != 0 %>
      resultString += '<b>Family Planning Methods:</b><br><ul>'
  <%
  family_planning_methods = @family_planning_methods.uniq.sort.map do |method|
    "<li> #{method}</li>"
  end
end
%>

    resultString += <%= "'#{family_planning_methods}'" %>
    resultString += '</ul>'

    innerHtml = '<div id="summary"><div>' +
      '<span class="title" style="font-size:25px;padding-top:7px;">' + resultString + '</span>' +
      '</div></div>'

    $('inputFrame'+tstCurrentPage).innerHTML = innerHtml
  }

  function showDrugs() {
    var prescription_container = $("previous_drugs_dispensed");
    var html = "<table>"
    html += "<tr><th>Drug name</th><th>Dose</th><th>Units</th><th>Daily dose</th></tr>"

<% (@regimen_formulations || []).each do |data| %>
      regimen_id = <%= data[4]%>
      html += "<tr><td>" + "<%=data[0]%>" + "</td>"
      html += "<td style='text-align:center;'>" + "<%=data[1]%>" + "</td>"
      html += "<td>" + "<%=data[3]%>" + "</td>"
      html += "<td>" + "<%=data[2]%>" + "</td></tr>"
<%end%>
    html += "</table>"
    prescription_container.innerHTML = html
    prescription_container.style.display = "inline";
  }

  function setAttributes() {
    $("backButton").setAttribute("onmousedown","gotoPage(" +(tstCurrentPage - 1) +", null, true);resetRegimen();");
    $("inputFrame"+tstCurrentPage).style.cssText = "height: 170px;";
    var nextButton = $("nextButton");
    nextButton.setAttribute("onmousedown","resetNextButton();gotoNextPage();")
  }

  function resetAttributes() {
    $("backButton").setAttribute("onmousedown","gotoPage(" + tstCurrentPage +", null, true)");
    $("previous_drugs_dispensed").style.cssText = "display: none;";
    id = document.getElementById("regimen_concept_id").value
    if (other_regimen != "yes"){
      set_regimen_concept_id_for_regimen($('patient_program').value, $('regimen_concept_id').value);
    } else {
      set_regimen_concept_id_for_regimen($('patient_program').value, $('regimen_concept_id_all').value);
    }

    setRegimenId('ART');
  }

  function resetNextButton() {
    $("previous_drugs_dispensed").style.cssText = "display: none;";
    $("nextButton").setAttribute("onmousedown","gotoNextPage();");
  }

  //function resetRegimen() {
  //}

  function hideKeyBoard() {
    $('page'+tstCurrentPage).getElementsByClassName("keyboard")[0].style.display='none';
  }

  function existingRegimen() {
    return hasReasonForART() == true &&
      current_regimens_for_programs[$("patient_program").value] != null
      && $("prescribe_arvs").value == "YES";
  }

  function continueRegimen() {
    var existingRegimen = "";
    if ($("continue_existing_regimen").value == "NO"){
      existingRegimen = 'true'
    }else{
      existingRegimen = 'false'
    }
    return existingRegimen;
  }

  function clearStandardRegimen() {
    concept = document.getElementById("regimen_concept_id");
    concept.selectedIndex = 0;
  }

  function addButton(){
    // __$('touchscreenInput' + tstCurrentPage).removeAttribute("optional", "true");
    var button = document.createElement("button");
    button.id = "addHere";
    button.innerHTML = "<span>Customize</span>";
    button.style.cssFloat = "right";

    other_regimen = "no"

    button.onclick = function(){
      $('regimen').value = '';
      jQuery('.custom-input').remove();
      __$('touchscreenInput' + tstCurrentPage).setAttribute("optional", "true");
      other_regimen = "yes";
      removeButton();
      gotoNextPage();
    }

    if(__$("buttons")){
      __$("buttons").appendChild(button);
    }
  }

  function removeButton(){
    if(__$("addHere")){
      __$("buttons").removeChild(__$("addHere"));
    }
  }

  function show_confirm_cpt_mgs(){
    protector = document.getElementById('protector')
    protector.style.display = 'inline'
    content = document.getElementById('content')
    confirm_cpt = document.getElementById('confirm_cpt_mgs');
    content.appendChild(confirm_cpt);
    confirm_cpt.style.display = 'inline'
  }

  function confirm_cpt_mgs_no_button(){
    confirm_cpt = document.getElementById('confirm_cpt_mgs');
    confirm_cpt.style.display = 'none';
    protector = document.getElementById('protector')
    protector.style.display = 'none'
  }

  function confirm_cpt_mgs_yes_button(){
    confirm_cpt = document.getElementById('confirm_cpt_mgs');
    confirm_cpt.style.display = 'none';
    protector = document.getElementById('protector')
    protector.style.display = 'none'
    gotoNextPage();
  }

  function set_cpt_options_events(){
    available_cpt_options = document.getElementsByTagName('li');
    current_weight = '<%= @current_weight %>'
    for(i=0; i<available_cpt_options.length; i++){

      available_cpt_options[i].onmouseup = function(){
        if (this.innerHTML == '480'){
          if (current_weight >= 30){
            show_confirm_cpt_mgs();
          }
        }
      }
    }
  }

  function checkInput(){
    if (document.getElementById('touchscreenInput' + tstCurrentPage).value.length > 0){
      document.getElementById('touchscreenInput'+tstCurrentPage).value = "";
    }
  }

  function prescribeHypertensionDrugs(){
<% if !params[:auto_rx].blank?%>
      return true
<% else%>
      return false
<% end %>
  }

  function modifyPage(){
    jQuery('#keyboard').hide();
    jQuery('#inputFrame' + tstCurrentPage).css({
      height: '86%'
    });

    jQuery('#inputFrame' + tstCurrentPage + '> .options').css({
      height: '90%'
    });
   
  }

  function setOptionsForRegimenChange(){
<% unless @current_regimen.blank? %>
      liElements = jQuery('li');
      for (var i=0; i<=liElements.length - 1; i++){
        liElements[i].onmouseup = function(){
          tstvalue = this.getAttribute('tstvalue');
          regIndex = tstvalue.replace( /^\D+/g, ''); // replace all leading non-digits with nothing. Copied from stack overflow #mangochiman
          if (parseInt(regIndex) != parseInt(currentRegimenIndex)){
            showRegimenChangePopup(); //Modified version
            //changeRegimenPopup();
          }

        }
        if (liElements){
          //stopRegimenChangeInterval();
        }

      }
<% end %>
  }

  var regimenChangeInterval;
  function startRegimenChangeInterval(){
    regimenChangeInterval = window.setInterval("setOptionsForRegimenChange()", 500);
  }

  function stopRegimenChangeInterval(){
    clearInterval(regimenChangeInterval)
  }

  function changeRegimenPopup(){

    var ele = document.getElementById('cover')
    ele.style.display = "inline";
    document.body.appendChild(ele);

    var newDiv = document.createElement('div');
    newDiv.id = "alertPage";
    newDiv.style.left = "32%";
    newDiv.style.top = "30%";
    newDiv.style.width = "840px";
    newDiv.style.height = "500px";

    var display = "<div id='main_head'><span>Reason for regimen change</span></div>";
    display += "<div height='800'><select id='reason_for_change' size='6'>";
    display += "<option value=''></option>"
    for (x=0; x < reasons.length; x++){
      display += "<option value='" + reasons[x] + "' onmousedown='removeObs(this)' class='reasons'>" + reasons[x] + "</option>";
    }
    display += "</select></div>";
    newDiv.innerHTML = '<div id="popup">' + display + '</div>' ;
    document.body.appendChild(newDiv);

    var newBtn = document.createElement('button');
    newBtn.className = "navButton red";
    newBtn.id = "cancel";
    newBtn.innerHTML = "<span>Cancel</span>";
    newDiv.appendChild(newBtn);
    newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';")

    var newBtn = document.createElement('button');
    newBtn.className = "green navButton";
    newBtn.id = "ok";
    newBtn.innerHTML = "<span>Next</span>";
    newDiv.appendChild(newBtn);
    newBtn.setAttribute('onclick', "updateForm(this);")
  }

  function buttonClicked(e) {
    var category = e.getAttribute('category').replace('_list','');
    var key = e.getAttribute('key');
    
    if(e.id.match(/no_btn_container_/i)) {
      var index = e.id.replace("no_btn_container_",'');
      
      var hidden_checkbox = document.getElementById(category + '_no_checkbox_' + index);
      var off_hidden_checkbox = document.getElementById(category + '_yes_checkbox_' + index);
      var off_label_checkbox = document.getElementById(category + '_yes_label_' + index);
      var on_label_checkbox = document.getElementById(category + '_no_label_' + index);
    }else{
      var index = e.id.replace("yes_btn_container_",'');
      var hidden_checkbox = document.getElementById(category + '_yes_checkbox_' + index);
      var off_hidden_checkbox = document.getElementById(category + '_no_checkbox_' + index);
      var off_label_checkbox = document.getElementById(category + '_no_label_' + index);
      var on_label_checkbox = document.getElementById(category + '_yes_label_' + index);
    }

    off_hidden_checkbox.checked = false;
    off_label_checkbox.setAttribute('style','color: black; background-color: ""');
    on_label_checkbox.setAttribute('style','color: white; background-color: lightgreen;');

    if(hidden_checkbox.checked) {
      hidden_checkbox.checked = false;
    }else{
      hidden_checkbox.checked = true;
    }

    var ft_concept = document.getElementById('fast_track_concept_' + e.getAttribute('concept_id'));
    ft_concept.value = e.getAttribute('concept_ans');
  
    /*
    if(e.id.match(/no_/i)) {
      __$(key).value = '';
      if(category == 'side_effects') {
        updateSideEffectNoValue(e);
      }else{
        updateTBSymptomNoValue(e);
      }
    }else{
      __$(key).value = key;
      if(category == 'side_effects') {
        updateSideEffectYesValue(e)
      }else{
        updateTBSymptomYesValue(e);
      }
    } */
  }

  function gotoNextPageOnlyIf(e) {
    var fast_track_attributes = (document.getElementById('touchscreenInput' + tstCurrentPage));
    // var nextBtn = document.getElementById('nextButton');
    //var regularBtn = document.getElementById('normal_visit');

    sex = "<%=@patient.person.gender.first.upcase%>";
    /*var fast_track_attr = [
      [['Adult', '9533'],['Any side effects / HIV-related diseases', '9539']],
      [['On ART >12m', '9534'],['Needs BP / diabetes treatment', '9540']],
      [['On 1st Line ART','9535'], ['Not pregnant / Breastfeeding', '9538']],
      [['Last VL <1000','9536'], ['Any sign for TB', '2186']],
      [['Good adherence','9537'], ['Started IPT <12m ago', '9527']]
    ];*/


    var fast_track_attr = [
      ['Adult  18 years +', '9533'], ['Started IPT<12m ago', '9527'],
      ['On 1<sup>st</sup> line ART','9535'],['Good current adherence', '9537'], 
      ['Last VL <1000', '9536'],['On ART for 12 months +', '9534'],
      ["Needs BP / diabetes treatment", '9540'],["Side effects / HIV-rel. diseases", '9539'],
      ["Any sign for TB",'2186'],['Pregnant / breastfeeding', '9538']
    ];


    for(var i = 0; i < fast_track_attr.length; i++){
      if(sex == 'M' && fast_track_attr[i][1] == '9538')
        continue;

      var inputbox = document.getElementById("fast_track_concept_" + fast_track_attr[i][1]);
      if(inputbox.value.length < 1) {
        var msg = inputbox.name;
        //alert(msg.replace('fast_track_concept','').replace('[','').replace(']','') + " is not selected");
        return;
      }
    }
    
    fast_track_attributes.setAttribute("optional", true); 
    //nextBtn.setAttribute('onmousedown', 'gotoNextPage();');

    var fast_track_ans = document.getElementById('book_for_fast_track');
    if(e.id == 'normal_visit') {
      fast_track_ans.value = 'No';
    }else{
      fast_track_ans.value = 'Yes';
    }

    gotoNextPage();
  }

  function removeRegularBtn() {
    var regularBtn = document.getElementById('normal_visit');
    var buttonsDivContainer = document.getElementById('buttons');
    buttonsDivContainer.removeChild(regularBtn);
  }

  function changeNextButton() {
    var nextBtn = document.getElementById('nextButton');
    nextBtn.setAttribute('onmousedown', 'gotoNextPageOnlyIf(this);');
    nextBtn.innerHTML = "<span>FT app.</span>";
    
    try {
      fast_track_attributes.removeAttribute("optional"); 
    }catch(e){};

    var buttonsDivContainer = document.getElementById('buttons');
    var setBackButton = document.getElementById('backButton');
    
    var normalVisit = document.createElement('button');
    normalVisit.setAttribute('class','button green navButton');
    normalVisit.setAttribute('id','normal_visit');
    normalVisit.setAttribute('onmousedown','gotoNextPageOnlyIf(this);');
    normalVisit.setAttribute('style','display: block;');
    normalVisit.innerHTML = "<span>Regular app.</span>";

    buttonsDivContainer.insertBefore(normalVisit, setBackButton);
  }

  function preselectedAssessments() {
    inputboxes = document.getElementsByClassName('assessments_for_ft');
    for(var i = 0; i < inputboxes.length; i++) {
      var concept_id = (inputboxes[i].id.replace('fast_track_concept_',''));
      var ans = (inputboxes[i].value);
      if(ans == 'YES') {
        var btns = document.getElementsByClassName('switch-yes');
      }else if(ans == 'NO'){
        var btns = document.getElementsByClassName('switch-no');
      }else{
        continue;
      }

      //alert(ans);
      //alert(btns.length);

      for(var x = 0; x < btns.length; x++){
        if(btns[x].getAttribute('concept_id') == concept_id){
          buttonClicked(btns[x]);
          break;
        }
      }
    
    }
  }

  function buildFastTrackTable() {
    table = document.createElement('table');
    table.setAttribute('id', 'fast-track-table');

<%if @patient.person.gender.first.upcase == 'M'%>
      var inclusion_list_arr = [
        ['Adult  18 years +', 9533], 
        ['On ART for 12 months +', 9534],
        ['On 1<sup>st</sup> line ART',9535],
        ['Good current adherence', 9537], ['Last VL <1000', 9536]
      ];

      var exclusion_list_arr = [
        ["Side effects / HIV-rel. diseases", 9539],
        ["Needs BP / diabetes treatment", 9540],
        ['Started IPT <12m ago', 9527],
        ["Any sign for TB",2186]
      ];
<%else%>
      var inclusion_list_arr = [
        ['Adult  18 years +', 9533], 
        ['On ART for 12 months +', 9534],
        ['On 1<sup>st</sup> line ART',9535],
        ['Good current adherence', 9537], ['Last VL <1000', 9536]
      ];

      var exclusion_list_arr = [
        ['Pregnant / Breastfeeding', 9538],
        ["Side effects / HIV-rel. diseases", 9539],
        ["Needs BP / diabetes treatment", 9540],
        ['Started IPT <12m ago', 9527],
        ["Any sign for TB",2186]
      ];
<%end%>

    /*var tr = document.createElement('tr');
    var th = document.createElement('th');
    th.setAttribute('id','inclusion')
    tr.appendChild(th);
    th.innerHTML = 'Inclusion'

    th = document.createElement('th');
    th.setAttribute('id','exclusion')
    tr.appendChild(th);
    th.innerHTML = 'Exclusion';
    table.appendChild(tr);*/


    tr = document.createElement('tr');
    var inclusion_list = document.createElement('td');
    inclusion_list.setAttribute('id','inclusion_list')
    tr.appendChild(inclusion_list);

    var exclusion_list = document.createElement('td');
    exclusion_list.setAttribute('id','exclusion_list')
    tr.appendChild(exclusion_list);

    table.appendChild(tr);


    var ltable = document.createElement('table');
    ltable.setAttribute('id','left_table');
    var ltr = document.createElement('tr');

    for(var i = 0; i < inclusion_list_arr.length; i++){
      var ltd = document.createElement('td');
      ltd.setAttribute('id', inclusion_list_arr[i][1]);
      ltd.setAttribute('class', 'inclusion_titles');
      ltd.innerHTML = inclusion_list_arr[i][0];
      ltr.appendChild(ltd);

      /******************* yes section starts *************************/
      ltd = document.createElement('td');
      ltr.appendChild(ltd);

      var leftDiv = document.createElement('div');
      leftDiv.setAttribute('class','switch switch-yes');
      leftDiv.setAttribute('id','yes_btn_container_' + i);
      leftDiv.setAttribute('category','inclusion_list');
      leftDiv.setAttribute('key', inclusion_list_arr[i][0]);
      leftDiv.setAttribute('onmousedown','buttonClicked(this);');
      leftDiv.setAttribute('concept_id', inclusion_list_arr[i][1]);
      leftDiv.setAttribute('concept_ans', 'YES');
      ltd.appendChild(leftDiv);

      var hiddenCheckBox = document.createElement('input');
      hiddenCheckBox.setAttribute('type','checkbox');
      hiddenCheckBox.setAttribute('class','hidden-checkbox');
      hiddenCheckBox.setAttribute('id','inclusion_yes_checkbox_' + i);
      leftDiv.appendChild(hiddenCheckBox);

      var l = document.createElement('label');
      l.setAttribute('id', 'inclusion_yes_label_' + i);
      leftDiv.appendChild(l);

      xi = document.createElement('i');
      l.appendChild(xi);
      /******************* yes section ends *************************/




      /******************* no section starts *************************/
      ltd = document.createElement('td');
      ltr.appendChild(ltd);

      var leftDiv = document.createElement('div');
      leftDiv.setAttribute('class','switch switch-no');
      leftDiv.setAttribute('id','no_btn_container_' + i);
      leftDiv.setAttribute('category','inclusion_list');
      leftDiv.setAttribute('key', inclusion_list_arr[i][0]);
      leftDiv.setAttribute('onmousedown','buttonClicked(this);');
      leftDiv.setAttribute('concept_id', inclusion_list_arr[i][1]);
      leftDiv.setAttribute('concept_ans', 'NO');
      ltd.appendChild(leftDiv);

      var hiddenCheckBox = document.createElement('input');
      hiddenCheckBox.setAttribute('type','checkbox');
      hiddenCheckBox.setAttribute('class','hidden-checkbox');
      hiddenCheckBox.setAttribute('id','inclusion_no_checkbox_' + i);
      leftDiv.appendChild(hiddenCheckBox);

      var l = document.createElement('label');
      l.setAttribute('id', 'inclusion_no_label_' + i);
      leftDiv.appendChild(l);

      xi = document.createElement('i');
      l.appendChild(xi);
      /******************* no section ends *************************/
      
      ltable.appendChild(ltr);
      ltr = document.createElement('tr');
    }
    inclusion_list.appendChild(ltable); 



    var rtable = document.createElement('table');
    rtable.setAttribute('id','right_table');
    var rtr = document.createElement('tr');

    for(var i = 0; i < exclusion_list_arr.length; i++){
      var rtd = document.createElement('td');
      rtd.setAttribute('id', exclusion_list_arr[i][1]);
      rtd.setAttribute('class', 'exclusion_titles');
      rtd.innerHTML = exclusion_list_arr[i][0];
      rtr.appendChild(rtd);

      /******************* yes section starts *************************/
      rtd = document.createElement('td');
      rtr.appendChild(rtd);

      var leftDiv = document.createElement('div');
      leftDiv.setAttribute('class','switch switch-yes');
      leftDiv.setAttribute('id','yes_btn_container_' + i);
      leftDiv.setAttribute('category','exclusion_list');
      leftDiv.setAttribute('key', exclusion_list_arr[i][0]);
      leftDiv.setAttribute('onmousedown','buttonClicked(this);');
      leftDiv.setAttribute('concept_id', exclusion_list_arr[i][1]);
      leftDiv.setAttribute('concept_ans', 'YES');
      rtd.appendChild(leftDiv);

      var hiddenCheckBox = document.createElement('input');
      hiddenCheckBox.setAttribute('type','checkbox');
      hiddenCheckBox.setAttribute('class','hidden-checkbox');
      hiddenCheckBox.setAttribute('id','exclusion_yes_checkbox_' + i);
      leftDiv.appendChild(hiddenCheckBox);

      var l = document.createElement('label');
      l.setAttribute('id', 'exclusion_yes_label_' + i);
      leftDiv.appendChild(l);

      xi = document.createElement('i');
      l.appendChild(xi);
      /******************* yes section ends *************************/




      /******************* no section starts *************************/
      rtd = document.createElement('td');
      rtr.appendChild(rtd);

      var leftDiv = document.createElement('div');
      leftDiv.setAttribute('class','switch switch-no');
      leftDiv.setAttribute('id','no_btn_container_' + i);
      leftDiv.setAttribute('category','exclusion_list');
      leftDiv.setAttribute('key', exclusion_list_arr[i][0]);
      leftDiv.setAttribute('onmousedown','buttonClicked(this);');
      leftDiv.setAttribute('concept_id', exclusion_list_arr[i][1]);
      leftDiv.setAttribute('concept_ans', 'NO');
      rtd.appendChild(leftDiv);

      var hiddenCheckBox = document.createElement('input');
      hiddenCheckBox.setAttribute('type','checkbox');
      hiddenCheckBox.setAttribute('class','hidden-checkbox');
      hiddenCheckBox.setAttribute('id','exclusion_no_checkbox_' + i);
      leftDiv.appendChild(hiddenCheckBox);

      var l = document.createElement('label');
      l.setAttribute('id', 'exclusion_no_label_' + i);
      leftDiv.appendChild(l);

      xi = document.createElement('i');
      l.appendChild(xi);
      /******************* no section ends *************************/
      
      rtable.appendChild(rtr);
      rtr = document.createElement('tr');
    }

<%if @patient.person.gender.first.upcase == 'M'%>
      rtd = document.createElement('td');
      rtd.setAttribute('colspan', '3');
      rtd.setAttribute('colspan', '3');
      rtd.innerHTML = "&nbsp;";
      rtr.appendChild(rtd);
      rtable.appendChild(rtr);
<%end%>
 
    exclusion_list.appendChild(rtable); 

    $('inputFrame'+tstCurrentPage).appendChild(table);
    $('inputFrame'+tstCurrentPage).style.width = "95%";
  }

  
  function buildFastTrackTable2() {
    table = document.createElement('table');
    table.setAttribute('id', 'fast-track-table');
    /* 
     */
    arr = [
        [['Adult  18 years +', 9533],['On ART for 12 months +', 9534]],
        [['On 1<sup>st</sup> line ART',9535],['Good current adherence', 9537]]
        [['Last VL <1000', 9536], ['Pregnant / Breastfeeding', 9538]],
        [["Side effects / HIV-rel. diseases", 9539],["Needs BP / diabetes treatment", 9540]],
        [['Started IPT <12m ago', 9527],["Any sign for TB",2186]]
      ];

<%if @patient.person.gender.first.upcase == 'M'%>
    arr = [
        [['Adult  18 years +', 9533],['On ART for 12 months +', 9534]],
        [['On 1<sup>st</sup> line ART',9535],['Good current adherence', 9537]]
        [['Last VL <1000', 9536],["Side effects / HIV-rel. diseases", 9539]],
        [["Needs BP / diabetes treatment", 9540],['Started IPT <12m ago', 9527]],
        [["Any sign for TB",2186]]
      ];
<%end%>

    counter = 1;
    for(var i = 0; i < attr.length; i++){
      tr = document.createElement('tr');
      td = document.createElement('td');
      concept_id = attr[i][0][1];
      td.innerHTML = attr[i][0][0];
      tr.appendChild(td);
      
      td = document.createElement('td');
      checkBox = document.createElement('img');
      checkBox.setAttribute('src','/touchscreentoolkit/lib/images/unticked.jpg');
      checkBox.setAttribute('class', 'fast_track_checkbox');
      checkBox.setAttribute('id', 'checkBox_' + counter);
      td.appendChild(checkBox);
      td.setAttribute('id','td_' + counter);
      td.setAttribute('onmousedown','checkBoxClicked(this);');
      td.setAttribute('concept_id',concept_id);
      tr.appendChild(td);
      counter += 1;

      td = document.createElement('td');
      data = attr[i][1];
      if (data){
        data = attr[i][1][0];
      }

      td.innerHTML = (data || '&nbsp;');
      tr.appendChild(td);
      td = document.createElement('td');

      if(attr[i].length == 2) {
        concept_id = attr[i][1][1];
        td.setAttribute('concept_id',concept_id);
        checkBox = document.createElement('img');
        checkBox.setAttribute('src','/touchscreentoolkit/lib/images/unticked.jpg');
        checkBox.setAttribute('class', 'fast_track_checkbox');
        checkBox.setAttribute('id', 'checkBox_' + counter);
        td.setAttribute('onmousedown','checkBoxClicked(this);');
        td.setAttribute('id','td_' + counter);
        
        td.appendChild(checkBox);
        counter += 1;
      }

      tr.appendChild(td);



      table.appendChild(tr);
    }
    
    $('inputFrame'+tstCurrentPage).appendChild(table);
  }

  function checkBoxClicked(e) {
    checkBoxNum = (e.id).replace('td_','');
    checkBox = document.getElementById('checkBox_' + checkBoxNum);
    fast_tracK_obs_input = document.getElementById("fast_tracK_obs");
    fast_track_answers = fast_tracK_obs_input.value.split(", ");
    
    concept_id = e.getAttribute('concept_id');
    if(checkBox.getAttribute('src').match('unticked')) {
      fast_track_answers.push(concept_id)
      checkBox.setAttribute('src','/touchscreentoolkit/lib/images/ticked.jpg');
    }else{

      fast_track_answers  = jQuery.grep(fast_track_answers , function(value) {
        return value != concept_id;
      });
		
      checkBox.setAttribute('src','/touchscreentoolkit/lib/images/unticked.jpg');
    }
    
    fast_tracK_obs_input.value = fast_track_answers.join(", ")
  }

  function addPrescriptionBtn() {
    optimizeInterval = document.createElement('button');
    optimizeInterval.setAttribute('onmousedown','onSetAppointmentIntervalType("Optimize - including hanging pills");');
    optimizeInterval.innerHTML = "<span>Optimized appt.</span>";
    optimizeInterval.setAttribute('class','button green navButton');
    optimizeInterval.setAttribute('id','optimize_interval');

    btnDiv = document.getElementById('buttons');

    setInterval = document.getElementById('nextButton');
    btnDiv.insertBefore(optimizeInterval, setInterval)
    setInterval.setAttribute('onmousedown','onSetAppointmentIntervalType("Exact - excluding hanging pills");');
    setInterval.innerHTML = "<span>Fixed appt.</span>";
  }

  function removePrescriptionBtn() {

    setInterval = document.getElementById('nextButton');
    setInterval.setAttribute('onmousedown','gotoNextPage();');
    setInterval.innerHTML = "<span>Next</span>";

    btnDiv = document.getElementById('buttons');
    child = document.getElementById('optimize_interval');
    btnDiv.removeChild(child);
  }

  function onSetAppointmentIntervalType(val) {
    document.getElementById('appointment_interval_type').value = val;
    gotoNextPage();
  }

  function clearCustomInput(){
    window.setTimeout(function(){
      clearInput();
    }, 350);
  }
</script>

<%
#options = [["240", "240"]] Not needed
options = []
if (@current_weight < 14)
  #options << ['120 <span class="moh_recommend">(MoH Recommended)</span>', '120']
  #options << ['480 <span class="moh_recommend">(MoH Recommended)</span>', '480']
  options << ['120', '120'] #Removed MOH Recommended tag
  options << ['480', '480']
else
  options << ['120', '120']
end

if (@current_weight >= 14) and (@current_weight < 30)
  #options << ['480 <span class="moh_recommend">(MoH Recommended)</span>', '480']
  options << ['480', '480'] #Removed MOH Recommended tag
  options << ['960', '960']
elsif (@current_weight >= 30)
  options << ['480', '480']
  #options << ['960 <span class="moh_recommend">(MoH Recommended)</span>', '960']
  options << ['960', '960'] #Removed MOH Recommended tag
end
options = options.sort_by{|key, value| value.to_i}
#options = options.sort_by{|key, value| value}

ipt_options = ["100"] if @current_weight < 10
ipt_options = ["100","150"] if @current_weight >= 10 and @current_weight < 14
ipt_options = ["100","150","200"] if @current_weight >= 14 and @current_weight < 20
ipt_options = ["100","150","200","250"] if @current_weight >= 20 and @current_weight < 25
ipt_options = ["100","150","200","250","300"] if @current_weight >= 25
pyridoxine_options = ["","25", "50"]
%>
<body>
  <div id="cover" align="center">
  </div>
  <form id='regimen_form' action="/regimens/create" method='post'>
    <%= hidden_field_tag :patient_id, @patient.id %>

<%###if not @allergic_to_sulphur.blank?
#if @allergic_to_sulphur.upcase == 'YES'
%>
<%#= text_field "allergic_to_sulphur_summary" , '',
:tt_onLoad => "$('clearButton').style.display='none'; $('inputFrame' + tstCurrentPage).style.display='none'; $('keyboard').style.display = 'none'",
:tt_onUnLoad => "$('clearButton').style.display='';",
:optional => "true",
:helpText => "<div class='custom-helptext' style='text-align:center;'>Patient is <b style='color:red'>allergic</b> to Cotrimoxazole</div>"
%>
<%#end
#end%>



    <!-- TB regimen -->
    <% if current_user.activities.include?('Manage Lab Orders') or current_user.activities.include?('Manage Lab Results') or
        current_user.activities.include?('Manage Sputum Submissions') or current_user.activities.include?('Manage TB Clinic Visits') or
        current_user.activities.include?('Manage TB Reception Visits') or current_user.activities.include?('Manage TB Registration Visits') or
        current_user.activities.include?('Manage HIV Status Visits') %>

      <% if (@family_planning_methods.length != 0) || ( @patient_bean.sex == 'Female' && @patient_bean.age > 14 ) %>
        <%= text_field_tag :task_name, nil,
          {   :tt_onLoad => "showResults();__$('keyboard').style.display = 'none';showCategory2('Prescription');",
          :optional => "true",
          :tt_pageStyleClass => "NoControls",
          :helpText => '' } %>
      <% end %>
    <% end %>

    <% unless @transfer_out_patient %>

      <%= touch_yes_no_tag "Prescribe drugs", @patient, nil,
        { :optional => false,
        :id => 'prescribe_tb_drugs',
        :condition => 'isRegisteredForTB() == true',
        :helpText => "Prescribe TB Regimen?",
        :tt_onLoad => "showCategory2('Prescription');"} %>

    <%end%>

    <% unless @tb_programs.uniq.count == 1 %>
      <%= select_tag :tb_patient_program, options_for_select(@tb_programs.map{|program| [program.program.name, program.patient_program_id] if PatientProgram.find(program.patient_program_id).date_completed == nil}),
        { :textCase => "upper",
        :condition => '$("prescribe_tb_drugs").value == "YES"',
        :allowFreeText => 'false',
        :helpText => "Prescribe regimen for which TB program?",
        :tt_onLoad => "showCategory2('Prescription');"} %>
    <%else%>
      <%= hidden_field_tag(:tb_patient_program, @tb_programs.first.patient_program_id) %>
    <%end%>

    <% unless @transfer_out_patient %>

      <%= select_tag :tb_continue_existing_regimen, options_for_select([['',''],['Yes','YES'],['No','NO']], ''),
        { :textCase => "upper",
        :allowFreeText => 'false',
        :condition => 'current_regimens_for_programs[$("tb_patient_program").value] != null && $("prescribe_tb_drugs").value == "YES"',
        :tt_onLoad => 'showTbDrugs();setAttributes();showCategory2("Regimen");',
        :tt_onUnLoad => 'resetAttributes();',
        :helpText => "Continue current TB regimen?" } %>

      <%  initial_regimen_help_text = "Select TB regimen"
      if @transfer_out_patient
        initial_regimen_help_text = "Select Inital TB regimen"
      end %>

      <%= select_tag :tb_regimen_concept_id, nil,
        { :ajaxUrl => "",
        :allowFreeText => 'false',
        :tt_onLoad => "set_patient_program_for_suggestions($('tb_patient_program').value);setTimeout('setSelectedRow()',500);showCategory2('Prescription');",
        :condition => '$("prescribe_tb_drugs").value == "YES" && $("tb_continue_existing_regimen").value != "YES"',
        :helpText => "#{initial_regimen_help_text}" } %>

      <%= text_field_tag :tb_regimen, nil,
        {
        :ajaxUrl => "",
        :tt_onUnLoad => "setRegimenId('TB');" ,
        :allowFreeText => true ,
        :tt_onLoad => "set_regimen_concept_id_for_regimen($('tb_patient_program').value, $('tb_regimen_concept_id').value);buildPrescriptionPage($('tb_continue_existing_regimen').value,  $('tb_patient_program').value, $('tb_regimen_concept_id').value, 'tb_prescription_container');showCategory2('Prescription');",
        :condition => '$("prescribe_tb_drugs").value == "YES"',
        :helpText => "Select formulations and doses" } %>

      <% optionsString = "<option>" "" "</option>"
      durations = ['2 weeks','1 month','2 months','3 months','4 months','5 months','6 months','7 months','8 months',
        '9 months', '10 months', '11 months','12 months']
      durations.each do |duration|
        if duration.match(/week/i)
          days = (((duration.to_i)*7))
        elsif duration.match(/days/i)
          days = 4
        elsif duration.match(/month/i)
          days = (((duration.to_i)* 28))
        end
        optionsString += "<option value = '" + days.to_s + "'>" + duration + "</option>"
      end
    %>
      <%= select_tag :tb_duration, optionsString,
        { :condition => '$("prescribe_tb_drugs").value == "YES"',
        :tt_onLoad => "__$('keyboard').style.display = 'none';showCategory2('Prescription');",
        :helpText => 'Duration' } %>


    <%end%>

    <% if @transfer_out_patient %>
      <%= touch_yes_no_tag "Prescribe drugs", @patient, nil,
        { :optional => false,
        :id => 'prescribe_continuation_tb_drugs',
        :condition => 'isRegisteredForTB() == true',
        :helpText => "Prescribe Continuation TB Regimen?",
        :tt_onLoad => "showCategory2('Prescription');"} %>

      <%= select_tag :tb_continuation_regimen_concept_id, nil,
        { :ajaxUrl => "",
        :allowFreeText => 'false',
        :tt_onLoad => "set_patient_program_for_suggestions($('tb_patient_program').value);setTimeout('setSelectedRow()',500);showCategory2('Prescription');",
        :condition => '$("prescribe_continuation_tb_drugs").value == "YES"',
        :helpText => "Select TB regimen" } %>

      <%= text_field_tag :tb_continuation_regimen, nil,
        {
        :ajaxUrl => "",
        :tt_onUnLoad => "setRegimenId('TB Continuation');" ,
        :allowFreeText => true ,
        :tt_onLoad => "set_regimen_concept_id_for_regimen($('tb_patient_program').value, $('tb_continuation_regimen_concept_id').value);buildPrescriptionPage('NO',  $('tb_patient_program').value, $('tb_continuation_regimen_concept_id').value, 'tb_prescription_container');showCategory2('Prescription');",
        :condition => '$("prescribe_continuation_tb_drugs").value == "YES"',
        :helpText => "Select formulations and doses" } %>

      <% optionsString = "<option>" "" "</option>"
      durations = ['4 Days','1 week','2 weeks','1 month','2 months','3 months','4 months','5 months','6 months','7 months', '8 months']
      durations.each do |duration|
        if duration.match(/week/i)
          days = (((duration.to_i)*7))
        elsif duration.match(/days/i)
          days = 4
        elsif duration.match(/month/i)
          days = (((duration.to_i)* 28))
        end
        optionsString += "<option value = '" + days.to_s + "'>" + duration + "</option>"
      end
    %>
      <%= select_tag :tb_continuation_duration, optionsString,
        { :condition => '$("prescribe_continuation_tb_drugs").value == "YES"',
        :helpText => 'Duration of TB drugs',
        :tt_onLoad => "showCategory2('Prescription');"} %>

    <% end %>

    <!-- HIV Regimen -->
    <% if @hiv_programs.uniq.count > 1 %>

      <%= select_tag :patient_program, options_for_select(@hiv_programs.map{|program| [program.program.name, program.patient_program_id] if PatientProgram.find(program.patient_program_id).date_completed == nil}), {
        :textCase => "upper",
        :allowFreeText => 'false',
        :helpText => "Prescribe regimen for which ARV program?",
        :tt_onLoad => "showCategory2('Prescription');"}%>
    <%else%>
      <%= hidden_field_tag(:patient_program, (@hiv_programs.first.patient_program_id rescue '')) %>
    <%end%>

    <% if @fast_track_patient == true && !@current_regimen.blank? %>
      <%= touch_hidden_tag("PRESCRIBE ARVS", @patient, 'YES', {:id => 'prescribe_arvs'}) %>
    <% else %>
  <%#= touch_yes_no_tag "PRESCRIBE ARVS", @patient, nil,
  {:id => 'prescribe_arvs',
  :allowFreeText => 'false',
  :condition => 'hasReasonForART() == true && prescribeAntiretroviralDrugs() == true',
  :helpText => "Prescribe ARVs?",
  :tt_onLoad => "showCategory2('Prescription');"} %>
      <%if @prescribe_arvs_set %>
        <%= touch_hidden_tag("PRESCRIBE ARVS", @patient, 'YES', {:id => 'prescribe_arvs'}) %>
      <% else %>
        <%= touch_hidden_tag("PRESCRIBE ARVS", @patient, 'NO', {:id => 'prescribe_arvs'}) %>
      <% end %>
    <% end %>


<%#= select_tag :continue_existing_regimen, options_for_select([['',''],['Yes','YES'],['No','NO']], ''), {
:textCase => "upper",
:allowFreeText => 'false',
:id => "continue_existing_regimen",
:tt_onLoad => 'showDrugs();setAttributes();changeButton();',
:validationCode => "continueRegimen() != 'true';",
:validationMessage => "Patient is starting a new regimen",
:tt_onUnLoad => 'resetAttributes();',
:condition => 'existingRegimen();',
:helpText => "Continue current ARV drugs?"}%>
    <%= touch_hidden_tag "Reason antiretrovirals changed or stopped", @patient, nil, {
      :id => 'reason_antiretrovirals_changed_or_stopped'} %>

    <%= hidden_field_tag("continue_existing_regimen", 'NO', {:id => 'continue_existing_regimen'}) %>

    <% if @fast_track_patient == true && !@current_regimen.blank? %>
      <%= hidden_field_tag("regimen_concept_id", "Regimen #{@current_regimen_index}") %>
    <% else %>
      <%= select_tag :regimen_concept_id, nil, {
        :ajaxUrl => "",
        :allowFreeText => 'false',
        :tt_onLoad => "hideCategory();checkInput(); removeButton();addButton();changeRegimen();set_patient_program_for_suggestions($('patient_program').value);setTimeout('setSelectedRow();setTextToAppear(\" (MoH Recommended)\")',1000);modifyPage(); startRegimenChangeInterval(); centerPopup(); jQuery('.custom-input').remove();",
        :condition => 'hasReasonForART() == true && $("prescribe_arvs").value == "YES" && $("continue_existing_regimen").value != "YES"',
        :helpText => "<span style='font-size: 24px;'>Select ART regimen. #{@current_regimen_text}, Current patient weight: <b>#{@current_weight}</b></span>",
        :optional => 'false' ,
        :tt_onUnload => "resetRegimen();removeButton(); stopRegimenChangeInterval();"}%>
    <% end %>

    <%= select_tag :regimen_concept_id_all, options_for_select(@custom_regimen_options), {
      :allowFreeText => 'false',
      :tt_onLoad => "clearCustomInput(); clearStandardRegimen();checkInput(); showCategory2('Prescription');",
      :condition => 'other_regimen == "yes"',
      :helpText => "Build ART regimen",
      :multiple => true,
      :tt_onUnload => "resetRegimen();getMedicationNames();"}%>

    <% if @fast_track_patient == true && !@current_regimen.blank? %>
      <%= hidden_field_tag("regimen", @current_regimen_index) %>
      <%= text_field_tag :regimen_fast_track, nil, {
        :ajaxUrl => "",
        :tt_onUnLoad => "setRegimenId('ART'); hideStock();" ,
        :allowFreeText => true ,
        :tt_onLoad => "buildPrescriptionPage($('continue_existing_regimen').value,$('patient_program').value,$('regimen_concept_id').value,'prescription_container');showCategory2('Prescription');",
        :condition => 'other_regimen != "yes" && hasReasonForART() == true && $("prescribe_arvs").value == "YES" && $("continue_existing_regimen").value !="YES"',
        :helpText => "Select formulations and doses"}%>
    <% else %>
      <%= text_field_tag :regimen, nil, {
        :ajaxUrl => "",
        :tt_onUnLoad => "setRegimenId('ART'); hideStock();" ,
        :allowFreeText => true ,
        :tt_onLoad => "set_regimen_concept_id_for_regimen($('patient_program').value, $('regimen_concept_id').value);buildPrescriptionPage($('continue_existing_regimen').value,$('patient_program').value,$('regimen_concept_id').value,'prescription_container');showCategory2('Prescription'); showDrugStockAvailability($('regimen_concept_id').value)",
        :condition => 'other_regimen != "yes" && hasReasonForART() == true && $("prescribe_arvs").value == "YES" && $("continue_existing_regimen").value !="YES"',
        :helpText => "Select formulations and doses"}%>

      <%= text_field_tag :regimen_ipt_cpt, nil, {
        :ajaxUrl => "",
        :tt_onUnLoad => "setRegimenId('ART'); hideStock();" ,
        :allowFreeText => true ,
        :tt_onLoad => "buildPrescriptionPageForCPTorIPT('prescription_container'); showCategory2('Prescription');",
        :condition => 'other_regimen != "yes" && hasReasonForART() == true && $("prescribe_arvs").value != "YES" && $("continue_existing_regimen").value !="YES"',
        :helpText => "Select formulations and doses"}%>
    <% end %>

    <%= text_field_tag :regimen_all, nil, {
      :ajaxUrl => "",
      :tt_onUnLoad => "setRegimenId('ART');" ,
      :allowFreeText => true ,
      :tt_onLoad => "set_regimen_concept_id_for_regimen($('patient_program').value, $('regimen_concept_id_all').value);buildPrescriptionPage_all($('continue_existing_regimen').value,$('patient_program').value,$('regimen_concept_id_all').value,'prescription_container');showCategory2('Prescription');",
      :condition => 'other_regimen == "yes" && hasReasonForART() == true && $("prescribe_arvs").value == "YES" && $("continue_existing_regimen").value !="YES"',
      :helpText => "Select formulations and doses"}%>


<%#= text_field_tag :duration, nil, {
:ajaxURL => "",
:field_type => 'number',
:units => 'days',
:tt_onLoad => 'set_regimen_concept_id_for_duration();',
:helpText => "Duration (days)",
:validationRule => "([0-9]+\\.?[0-9]*)|Unknown$",
:validationMessage => "You must enter a number (for example: 5<b>.0</b>)",
:allowFreeText => "true",
:tt_pageStyleClass => "NumbersOnlyWithDecimal"}%>



    <%= select_tag :duration, optionsString, {
      :id => "interval_to_next_visit",
      :condition => '$("prescribe_arvs").value == "YES" || $("cpt_given").value == "YES" || $("ipt_given").value == "YES"',
      :tt_onLoad => "checkIfStarterPack();addPrescriptionBtn();__$('keyboard').style.display = 'none';
  showCategory2('Prescription'); showAvailableStock($('regimen_concept_id').value); setTimeout('disableOptimiseButtonForStarterPacks();', 300);",
      :tt_onUnLoad => "removePrescriptionBtn();hideStockLevelDetails(); removeOnclickEvent();",
      :helpText => 'Interval to next visit' } %>

    <%= touch_hidden_tag "Appointment type", @patient, nil, :id => "appointment_interval_type" %>

    <!-- Fast  track questions -->
    <% enable_fast_track = GlobalProperty.find_by_property('enable.fast.track').property_value == 'true' rescue false %>
    <% if not @fast_track_patient == true and enable_fast_track == true %>

      <%= select_tag "assess_fast_track", options_for_select([['Yes','YES'],['No','NO']]),
        :id => 'assess_fast_track',
        :helpText => "Assess for fast track visit (next appointment)",
        :tt_onLoad => "showCategory2('Fast track');",
        :tt_pageStyleClass => 'NoKeyboard' %>

      <%= text_field_tag :fast_track_attributes, nil,
        { :tt_onLoad => "changeNextButton();showCategory2('Fast track');$('clearButton').style.display='none';$('keyboard').style.display = 'none';buildFastTrackTable();adjusFontSizeForFT();preselectedAssessments();",
        :condition => '$("assess_fast_track").value == "YES"',
        :tt_onUnload => 'removeRegularBtn();',
        :helpText => 'Check eligibility for <b>Fast Track</b> re-fil (next visit)',
        :tt_pageStyleClass => "NoControls" }
    %>

      <%fast_track_attr = [
        ['Adult  18 years +', '9533'], ['Started IPT<12m ago', '9527'],
        ['On 1<sup>st</sup> line ART','9535'],['Good current adherence', '9537'], 
        ['Last VL <1000', '9536'],['On ART for 12 months +', '9534'],
        ["Needs BP / diabetes treatment", '9540'],["Side effects / HIV-rel. diseases", '9539'],
        ["Any sign for TB",'2186'],['Pregnant / breastfeeding', '9538']
      ]

      (fast_track_attr).each do |name, concept_id|
        next if @patient.person.gender.first.upcase == 'M' and concept_id == '9538'
      %>
        <input type="hidden" class='assessments_for_ft' name="fast_track_concept[<%=concept_id%>]" id="fast_track_concept_<%=concept_id%>" />
      <%end%>

      <input type="hidden" id="book_for_fast_track" name="fast_track_yes_no" />
    <%end%>
    <!-- Fast  track questions ends -->

    <!-- CPT & IPT-->
    <%if not @allergic_to_sulphur.blank?
      if @allergic_to_sulphur.upcase == 'YES'%>
        <%= touch_hidden_tag "Prescribe cotramoxazole", @patient, "NO", :id => "cpt_given" %>
        <input type='hidden' name='cpt_mgs' id='cpt_mgs' />
      <%else%>
    <%#= touch_yes_no_tag "Prescribe cotramoxazole", @patient, nil,
    { :id => 'cpt_given',
    :allowFreeText => 'false',
    :condition => 'prescribeAntiretroviralDrugs() == true && prescribeCPT() == true',
    :helpText => "Prescribe CPT",
    :tt_onLoad => "showCategory2('Prescription');"} %>
        <input type='hidden' name='cpt_mgs' id='cpt_mgs' />
        <%= touch_hidden_tag "Prescribe cotramoxazole", @patient, "#{@prescribe_cpt_set == true ? 'YES' : 'NO'}", :id => "cpt_given" %>

    <%#= select_tag :cpt_mgs, options_for_select(options), {
    :allowFreeText => 'false',
    :condition => "$('cpt_given').value == 'YES'",
    :helpText => "Prescribed cotrimoxazole milligrams",
    :tt_onLoad => "checkInput(); showCategory2('Prescription'); setTextToAppear(); showCptDrugStock()",
    :tt_onUnLoad => 'hideStock();',
    :tt_onmousedown => "show_confirm_cpt_mgs()"} %>
      <%end%>
    <% else %>
      <%= touch_hidden_tag "Prescribe cotramoxazole", @patient, "NO", :id => "cpt_given" %>
      <input type='hidden' name='cpt_mgs' id='cpt_mgs' />
    <%end%>

    <% if @session_date < @new_guide_lines_start_date %>
      <% current = session[:datetime].to_date rescue Date.today
      if current >= '2014-04-01'.to_date %>
        <% if @patient_bean.age >= 5 && !@current_hiv_program_state.match(/On antiretrovirals/i) && !@current_hiv_program_state.match(/Patient transferred in/i) %>
      <%#= touch_yes_no_tag "ISONIAZID", @patient, nil,
      { :id => 'ipt_given',
      :allowFreeText => 'false',
      :condition => "prescribeAntiretroviralDrugs() && $('prescribe_arvs').value != 'YES' && prescribeIPT()",
      :helpText => "Prescribe IPT",
      :tt_onLoad => "showCategory2('Prescription');"} %>

          <% ipt_ans = 'YES' if @prescribe_ipt_set
          ipt_ans = 'NO' if not @prescribe_ipt_set %>
          <%= touch_hidden_tag "ISONIAZID", @patient, ipt_ans, :id => "ipt_given" %>
          <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
      <%#= select_tag :ipt_mgs, options_for_select(ipt_options), {
      :allowFreeText => 'false',
      :condition => "prescribeAntiretroviralDrugs() && $('ipt_given').value == 'YES'",
      :helpText => "IPT milligrams",
      :tt_onLoad => "showCategory2('Prescription');"} %>

        <%else%>
          <%= touch_hidden_tag "ISONIAZID", @patient, "", :id => "ipt_given" %>
          <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
        <%end %>

      <%  else %>
        <% if @patient_bean.age >= 2 && !@current_hiv_program_state.match(/On antiretrovirals/i) && !@current_hiv_program_state.match(/Patient transferred in/i) %>
      <%#= touch_yes_no_tag "ISONIAZID", @patient, nil,
      { :id => 'ipt_given',
      :allowFreeText => 'false',
      :condition => "prescribeAntiretroviralDrugs() && $('prescribe_arvs').value != 'YES' && prescribeIPT()",
      :helpText => "Prescribe IPT",
      :tt_onLoad => "showCategory2('Prescription');"} %>

          <% ipt_ans = 'YES' if @prescribe_ipt_set
          ipt_ans = 'NO' if not @prescribe_ipt_set %>
          <%= touch_hidden_tag "ISONIAZID", @patient, ipt_ans, :id => "ipt_given" %>
          <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
      <%#= select_tag :ipt_mgs, options_for_select(ipt_options), {
      :allowFreeText => 'false',
      :condition => "prescribeAntiretroviralDrugs() && $('ipt_given').value == 'YES'",
      :helpText => "IPT milligrams",
      :tt_onLoad => "showCategory2('Prescription');"} %>
        <%else%>
          <%= touch_hidden_tag "ISONIAZID", @patient, "", :id => "ipt_given" %>
          <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
        <%end %>
      <% end %>

    <% else %>
      <!---NEW ART GUIDE LINES. Prescribe IPT for all children and adults ---->
      <% if @patient_bean.age >= 2 %>
    <%#= touch_yes_no_tag "ISONIAZID", @patient, nil,{
    :id => 'ipt_given',
    :allowFreeText => 'false',
    :condition => "$('prescribe_arvs').value == 'YES' && prescribeIPT()",
    :helpText => "Prescribe IPT",
    :tt_onLoad => "showCategory2('Prescription');"} %>

        <% ipt_ans = 'YES' if @prescribe_ipt_set
        ipt_ans = 'NO' if not @prescribe_ipt_set %>
        <%= touch_hidden_tag "ISONIAZID", @patient, ipt_ans, :id => "ipt_given" %>
        <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
    <%#= select_tag :ipt_mgs, options_for_select(ipt_options), {
    :allowFreeText => 'false',
    :condition => "$('ipt_given').value == 'YES'",
    :helpText => "IPT milligrams",
    :tt_onLoad => "showCategory2('Prescription');"} %>
      <% else %>
        <%= touch_hidden_tag "ISONIAZID", @patient, "", :id => "ipt_given" %>
        <input type='hidden' name='ipt_mgs' id='ipt_mgs' />
      <% end %>

    <% end %>

    <%= touch_hidden_tag "pyridoxine", @patient, "", :id => "pyridoxine" %>
    <input type='hidden' name='pyridoxine_value' id='pyridoxine_value' />

<%#= touch_yes_no_tag "pyridoxine", @patient, nil,
{ :id => 'pyridoxine',
:allowFreeText => 'false',
:condition => "prescribeAntiretroviralDrugs() && $('prescribe_arvs').value != 'YES' && $('ipt_given').value == 'YES'",
:helpText => "Prescribe Pyridoxine",
:tt_onLoad => "showCategory2('Prescription');"} %>

<%#= select_tag :pyridoxine_value, options_for_select(pyridoxine_options), {
:allowFreeText => 'false',
:condition => "prescribeAntiretroviralDrugs() && $('pyridoxine').value == 'YES'",
:helpText => "Pyridoxine Milligrams",
:tt_onLoad => "showCategory2('Prescription');"} %>

<%#= select_tag :cpt_duration, optionsString,
{ :condition => '($("prescribe_arvs").value == "NO" || $("prescribe_arvs").value == "")
&& ($("cpt_given").value == "YES" ||
$("ipt_given").value == "YES"  ||
$("pyridoxine").value == "YES" || prescribeHypertensionDrugs())',
:tt_onLoad => "__$('keyboard').style.display = 'none';showCategory2('Prescription');",
:helpText => 'Duration' } %>

    <% if !params[:auto_rx].blank? #htn drugs to be prescribed
      params[:auto_rx].each do |htn_drg|
      %>
        <%= hidden_field_tag "htn_drugs[]", htn_drg%>
      <%
      end
    end %>

<%#= select_tag :ipt_duration, optionsString,
{ :condition => '$("prescribe_arvs").value == "NO" && $("ipt_given").value == "YES"',
:tt_onLoad => "__$('keyboard').style.display = 'none'",
:helpText => 'Duration' } %>

    <% if @patient_bean.age >= 14 %>
      <% if @retrospective %>
    <%#= touch_numeric_tag "CONDOMS", @patient, nil,
    { :max => '100',
    :condition => 'hasARTVisit() == true;',
    :tt_pageStyleClass => "unknownButton",
    :helpText => 'Number of condoms given',
    :tt_onLoad => "showCategory2('Prescription');"
    } %>
      <% else %>
    <%#= touch_numeric_tag "CONDOMS", @patient, nil,
    { :max => '100',
    :condition => 'hasARTVisit() == true;',
    :helpText => 'Number of condoms given',
    :tt_onLoad => "showCategory2('Prescription');"
    } %>
      <% end %>

    <% end %>

<%#= touch_text_area_tag "CLINICAL NOTES CONSTRUCT", @patient, nil,
{ :id => "clinical_notes",
:optional => true,
:helpText => "Clinical notes (optional)",
:tt_onLoad => "showCategory2('Prescription');"
}, time=DateTime.now() %>

    <% initial_date = "#{session[:datetime].strftime('%Y-%m-%d')}" rescue "#{(Date.today).strftime('%Y-%m-%d')}" %>

    <%
    transfer_location_id = nil
    transfer_within_responsibility_value = 'Unknown'
    current_state_value = nil

    program_workflow = ProgramWorkflow.all(:conditions => ['program_id = ?', Program.find_by_name("TB PROGRAM").id], :include => :concept)
    program_workflow_id = program_workflow.first.program_workflow_id

    states = ProgramWorkflowState.all(:conditions => ['program_workflow_id = ?', program_workflow_id], :include => :concept)

    states.each do |state|
      concept = state.concept
      if (concept.fullname == "Patient transferred out")
        current_state_value = state.program_workflow_state_id
        break
      end
    end

    if !@tb_encounter.blank?
      for obs in @tb_encounter.observations do
        if obs.concept_id == ConceptName.find_by_name("Transfer to").concept_id
          transfer_location_id = "#{obs.to_s(["short", "order"]).to_s.split(":")[1].to_i}"
        elsif obs.concept_id == ConceptName.find_by_name("Transfer within responsibility").concept_id
          transfer_within_responsibility_value = "#{obs.to_s(["short", "order"]).to_s.split(":")[1].to_s}"
        end
      end
    end

    program = PatientProgram.find(:all,:conditions =>["voided = 0 AND patient_id = ?
    AND program_id = ? AND location_id = ?", @patient.id ,
        Program.find_by_name("TB PROGRAM").id, Location.current_health_center.id]).last rescue nil


    if program != nil
      if (program.date_completed.blank?)
        if !transfer_location_id.blank? %>
          <%= hidden_field_tag "transfer_data[]transfer_out_location_id", transfer_location_id %>
          <%= hidden_field_tag "transfer_data[]current_state", "#{current_state_value}" %>
          <%= hidden_field_tag "transfer_data[]current_date", "#{initial_date}" %>

          <%= hidden_field_tag "transfer_data[]patient_program_id", "#{program.id}" %>

          <%= hidden_field_tag "transfer_data[]patient_id", @patient.id %>
          <%= hidden_field_tag "transfer_data[]location", Location.current_health_center.id %>

          <%= hidden_field_tag "transfer_data[]encounter[provider_id]", current_user.user_id %>
          <%= hidden_field_tag "transfer_data[]encounter[encounter_type_name]", "TRANSFER OUT" %>
          <%= hidden_field_tag "transfer_data[]encounter[patient_id]", @patient.id %>
          <%= hidden_field_tag "transfer_data[]encounter[encounter_datetime]", DateTime.now() %>

          <%= hidden_field_tag "transfer_data[]observations[][patient_id]", @patient.id  %>
          <%= hidden_field_tag "transfer_data[]observations[][concept_name]", "TRANSFER WITHIN RESPONSIBILITY" %>
          <%= hidden_field_tag "transfer_data[]observations[][obs_datetime]", DateTime.now() %>
          <%= hidden_field_tag "transfer_data[]observations[][value_coded_or_text]", "#{transfer_within_responsibility_value}"%>
        <%end
      end
    end%>

    <% if @retrospective %>

      <p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
        <%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
    <% else %>
      <%= hidden_field_tag "filter[provider]", nil %>
    <%end%>
  </form>
  <div id="previous_drugs_dispensed">
  </div>

  <div id="confirm_cpt_mgs" style="display:none">
    <div><br />
      <center><span style="font-size: 2em; color: red">Children on 2nd line regimen 9P rountinely change to standard adult 2nd line regimen 7A once they weigh over 35Kg.<br />
          Would you like to change?</span><br /><br /><br />
        <button onclick="confirm_cpt_mgs_yes_button()" style="position:absolute; left:20%; min-width: 140px; bottom: 2%;" id="yes"><span>Yes</span></button>
        <button onclick="confirm_cpt_mgs_no_button()" style="position:absolute; right:20%; min-width: 140px; bottom: 2%;" id="no"><span>No</span></button></center>

    </div>
  </div>

  <div id="protector" style="display:none">

  </div>
  <% if vl_routine_check_activated %>
    <div id="vl_lab_trail" style="display:none;">
      <div id="vl_lab_trail_header">
        <span style="font-size: 16pt;">
          <center>This patient has high viral loads. Do you want to switch this patient to second line regimen?</center>
        </span>
      </div>

      <div id="vl_lab_trail_content">
        <div style="position: absolute; height: 63%; width:100%; overflow: auto;">
          <table cellspacing='0' style="position:absolute; width:94%; left: 3%; margin-top: 3%;">
            <tr class="vl_table_header" style="background-color: #A2CD5A; line-height: 2em; font-size: 18px;">
              <td style="min-width: 130px;"><span><center>Date of Sample</center></span></td>
              <td style="min-width: 120px;"><span><center>Result</center></span></td>
              <td><span><center>Result given?</center></span></td>
              <td><span><center>Date result given</center></span></td>
            </tr>
            <% (@vl_result_hash || {}).each do |sample_id, result| %>
              <tr style="line-height: 3em;" class="vl_tbody">
                <td style="border-left: 1px solid black;">
                  <span><center>  <%= result["date_of_sample"].strftime("%d-%b-%Y") %></center></span>
                </td>
                <td><span><center><%= result["result"] %></center></span></td>
                <td><span><center><%= result["result_given"].capitalize %></center></span></td>
                <td><span><center><%= result["date_result_given"].strftime("%d-%b-%Y") rescue "------" %></center></span></td>
              </tr>
            <% end %>
          </table>
        </div>
      </div>

      <div id="vl_lab_trail_footer">
        <span style="left:4%; padding: 12px 20%;" onclick="switchToSecondLine();">Yes</span>
        <span style="right:4%; padding: 12px 20%;" onclick="hideHighVlPopup();">No</span>
      </div>
    </div>
  <% end %>

  <div id="drug_stock">
  </div>

  <div class="stock_level_details" style="display: none;">

  </div>
  <script src="/javascripts/regimenSideEfectsPopup.js?version=<%=Time.now.to_i%>" type="text/javascript"></script>
</body>
<script>

  function showRegimenChangeAlert(){
<% if @current_weight %>
  <%
  current_regimen = @current_regimen.upcase rescue ''
  if @current_weight > 35 && @patient_bean.age <=14 && current_regimen == '9P' %>
        document.getElementById('confirm_cpt_mgs').style.display = 'inline'
        document.getElementById('protector').style.display = 'inline'
  <% end %>
<% end %>
  }

  function showHighVlPopup(){
<% if vl_routine_check_activated %>
  <% if (patient_has_high_viral_loads(@patient)) %>
        available_options = document.getElementsByTagName('li');
        for(i=0; i<available_options.length; i++){
          available_options[i].onmouseup = function(){
            document.getElementById('protector').style.display='inline';
            document.getElementById('vl_lab_trail').style.display='inline';
          }
        }
  <% end %>
<% end %>
  }

  function switchToSecondLine(){
    jQuery.ajax({
      type: "POST",
      url: "/patients/switch_to_second_line",
      data: "patient_id="+<%=@patient.id %>,
      success: function(){
        document.getElementById('protector').style.display='none';
        document.getElementById('vl_lab_trail').style.display='none';
        //gotoNextPage();
      }
    });
  }

  function hideHighVlPopup(){
    document.getElementById('protector').style.display='none';
    document.getElementById('vl_lab_trail').style.display='none';
  }

  /*window.setInterval(function(){
    setTextToAppear(" (MoH Recommended)");
    setTextToAppear();
  }, 100);*/

</script>

<div id="regimen-change-popup-div">
  <div id="regimen-change-popup-header">
    <center>Regimen Change </center>
  </div><br />
  <div>

    <span style="font-size: 16pt;">
      <center>
        <i><b id="regimen-change-header">CONFIRM REGIMEN CHANGE</b></i><br />
        Are you sure you want to change regimen?
      </center>
    </span>
    <div style="padding-top: 65px;">

      <span id="regimen-change-yes" onclick="recordNotification('Confirm regimen change','continue with regimen change');continueWithRegimenChange();" 
        class="regimen-change-my_button">Yes, Am sure</span>
      <span id="regimen-change-no" onclick="recordNotification('Confirm regimen change','Cancel regimen change');hideRegimenChangePopup();" 
        class="regimen-change-my_button">No, Am not sure</span>
    </div>
  </div>
</div>


<div id="regimen-change-cover"></div>

<style type="text/css">

  .regimen-change-my_button {
    -moz-user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
    cursor: pointer;
    display: inline-block;
    font-size: 16px;
    font-weight: bolder;
    line-height: 2.29;
    margin-bottom: 0;
    padding: 6px 56px;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;
    background-color: #337ab7;
    border-color: #2e6da4;
    color: #fff;
    float: right;
    margin-top: -5px;
  }


  #regimen-change-popup-div {
    display: none;
    background-color: #F4F4F4;
    border: 2px solid #E0E0E0;
    border-radius: 15px;
    height: 240px;
    padding: 5px;
    position: absolute;
    margin-top: 100px;
    width: 560px;
    margin-left: 18%;
    z-index: 991;
  }

  #regimen-change-popup-header{
    border-bottom: 2px solid #7D9EC0;
    margin-left: -5px;
    width: 101.5%;
    background-color: #FFFFFF;
    margin-top: -5px;
    padding-top: 5px;
    border-radius: 15px 15px 0 0;
    font-size: 14pt;
    font-weight: bolder;
  }

  #regimen-change-cover{
    display: none;
    position: absolute;
    background-color: black;
    width: 100%;
    height: 102%;
    left: 0%;
    top: 0%;
    z-index: 990;
    opacity: 0.65;
  }

  #regimen-change-yes{
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    bottom: 0px;
  }

  #regimen-change-no{
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    bottom: 0px;
    margin-right: 27px;
  }
</style>

<script type="text/javascript">
  function hideRegimenChangePopup(){
    clearInput();
    document.getElementById("regimen-change-popup-div").style.display = 'none';
    document.getElementById("regimen-change-cover").style.display = 'none';
  }

  function continueWithRegimenChange(){
    document.getElementById("regimen-change-popup-div").style.display = 'none';
    document.getElementById("regimen-change-cover").style.display = 'none';
    //gotoNextPage();
  }

  function showRegimenChangePopup(){
    document.getElementById("regimen-change-popup-div").style.display = 'inline';
    document.getElementById("regimen-change-cover").style.display = 'inline';
  }

  function sortDates(array) {
    return array.sort(function(a, b) {
      var x = new Date(a).getTime(); var y = new Date(b).getTime();
      return ((x < y) ? -1 : ((x > y) ? 1 : 0));
    });
  }

  function adjusFontSizeForFT() {

    if (window.innerWidth == 1024) {

      var titles = ['inclusion_titles', 'exclusion_titles'];

      for(var t = 0; t < titles.length; t++) {
        selected_titles = document.getElementsByClassName(titles[t]);
        for(var i = 0; i < selected_titles.length; i++) {
          selected_titles[i].style.fontSize = '14px';
        }
      }

    }

  }

  jQuery.fn.center = function() {
    parent = this.parent();
    this.css({
      "position": "absolute",
      "top": (((jQuery(parent).height() - this.outerHeight()) / 2) + jQuery(parent).scrollTop() - 100 + "px"),
      "left": (((jQuery(parent).width() - this.outerWidth()) / 2) + jQuery(parent).scrollLeft() + "px")
    });
    return this;
  }
  
</script>

